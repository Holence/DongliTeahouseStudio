# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'dongli_teahouse_studio_window.ui'
##
## Created by: Qt User Interface Compiler version 5.15.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide2.QtCore import *
from PySide2.QtGui import *
from PySide2.QtWidgets import *

from custom_widget import MyPlainTextEdit
from custom_widget import MyConceptLinkedFileList
from custom_widget import MyTreeWidget
from custom_widget import MyLineEditList
from custom_widget import MyTitleLabel
from custom_widget import MyStackButton
from custom_widget import MyDockTitleLabel
from custom_widget import MyConceptList

import resource_rc

class Ui_dongli_teahouse_studio_window(object):
    def setupUi(self, dongli_teahouse_studio_window):
        if not dongli_teahouse_studio_window.objectName():
            dongli_teahouse_studio_window.setObjectName(u"dongli_teahouse_studio_window")
        dongli_teahouse_studio_window.resize(1442, 1084)
        icon = QIcon()
        icon.addFile(u":/icon/holoico_trans.ico", QSize(), QIcon.Normal, QIcon.Off)
        dongli_teahouse_studio_window.setWindowIcon(icon)
        dongli_teahouse_studio_window.setStyleSheet(u"QListWidget::item:selected {\n"
"    border-radius:5px;\n"
"    background-color:rgb(73, 73, 73);\n"
"}\n"
"\n"
"QTreeWidget::item:selected {\n"
"    border-radius:5px;\n"
"    background-color:rgb(73, 73, 73);\n"
"}\n"
"\n"
"QTreeWidget::branch:has-children:!has-siblings:closed,\n"
"QTreeWidget::branch:closed:has-children:has-siblings {\n"
"	image: url(:/icon/chevron-right.svg);\n"
"}\n"
"\n"
"QTreeWidget::branch:open:has-children:!has-siblings,\n"
"QTreeWidget::branch:open:has-children:has-siblings  {\n"
"	image: url(:/icon/arrow-down.svg);\n"
"}\n"
"\n"
"QTreeWidget::branch {\n"
"    background-color:rgb(42,42,42);\n"
"}\n"
"\n"
"QDockWidget QPushButton {	\n"
"	border: none;\n"
"	background-color: transparent;\n"
"}\n"
"QDockWidget QPushButton:hover{\n"
"	background-color: rgb(40,40,40);\n"
"}\n"
"QDockWidget QPushButton:pressed {	\n"
"	background-color: rgb(30,30,30);\n"
"}\n"
"\n"
"QWidget#stack_btn_frame QPushButton {	\n"
"	border: none;\n"
"	background-color: transparent;\n"
"}\n"
"QWidget#stack_btn_fra"
                        "me QPushButton:hover{\n"
"	background-color: rgb(40,40,40);\n"
"}\n"
"QWidget#stack_btn_frame QPushButton:pressed {	\n"
"	background-color: rgb(30,30,30);\n"
"}\n"
"\n"
"QWidget#title_frame QPushButton {	\n"
"	border: none;\n"
"	background-color: transparent;\n"
"}\n"
"QWidget#title_frame QPushButton:hover{\n"
"	background-color: rgb(40,40,40);\n"
"}\n"
"QWidget#title_frame QPushButton:pressed {	\n"
"	background-color: rgb(30,30,30);\n"
"}")
        self.actionCreate_Concept = QAction(dongli_teahouse_studio_window)
        self.actionCreate_Concept.setObjectName(u"actionCreate_Concept")
        icon1 = QIcon()
        icon1.addFile(u":/icon/plus.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCreate_Concept.setIcon(icon1)
        self.actionAdd_New_Line = QAction(dongli_teahouse_studio_window)
        self.actionAdd_New_Line.setObjectName(u"actionAdd_New_Line")
        icon2 = QIcon()
        icon2.addFile(u":/icon/corner-down-left.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_New_Line.setIcon(icon2)
        self.actionLink_Concept_to_Line = QAction(dongli_teahouse_studio_window)
        self.actionLink_Concept_to_Line.setObjectName(u"actionLink_Concept_to_Line")
        icon3 = QIcon()
        icon3.addFile(u":/icon/link.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionLink_Concept_to_Line.setIcon(icon3)
        self.actionSave_Data = QAction(dongli_teahouse_studio_window)
        self.actionSave_Data.setObjectName(u"actionSave_Data")
        icon4 = QIcon()
        icon4.addFile(u":/icon/save.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave_Data.setIcon(icon4)
        self.actionDelete = QAction(dongli_teahouse_studio_window)
        self.actionDelete.setObjectName(u"actionDelete")
        icon5 = QIcon()
        iconThemeName = u"Delete"
        if QIcon.hasThemeIcon(iconThemeName):
            icon5 = QIcon.fromTheme(iconThemeName)
        else:
            icon5.addFile(u":/icon/trash-2.svg", QSize(), QIcon.Normal, QIcon.Off)
        
        self.actionDelete.setIcon(icon5)
        self.actionAdd_Concept_To_Parent = QAction(dongli_teahouse_studio_window)
        self.actionAdd_Concept_To_Parent.setObjectName(u"actionAdd_Concept_To_Parent")
        icon6 = QIcon()
        icon6.addFile(u":/icon/user-plus.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_Concept_To_Parent.setIcon(icon6)
        self.actionAdd_Concept_To_Child = QAction(dongli_teahouse_studio_window)
        self.actionAdd_Concept_To_Child.setObjectName(u"actionAdd_Concept_To_Child")
        self.actionAdd_Concept_To_Child.setIcon(icon6)
        self.actionAdd_Concept_To_Relative = QAction(dongli_teahouse_studio_window)
        self.actionAdd_Concept_To_Relative.setObjectName(u"actionAdd_Concept_To_Relative")
        self.actionAdd_Concept_To_Relative.setIcon(icon6)
        self.actionToggle_Fullscreen = QAction(dongli_teahouse_studio_window)
        self.actionToggle_Fullscreen.setObjectName(u"actionToggle_Fullscreen")
        icon7 = QIcon()
        icon7.addFile(u":/icon/monitor.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionToggle_Fullscreen.setIcon(icon7)
        self.actionExit = QAction(dongli_teahouse_studio_window)
        self.actionExit.setObjectName(u"actionExit")
        icon8 = QIcon()
        icon8.addFile(u":/icon/log-out.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExit.setIcon(icon8)
        self.actionAbout = QAction(dongli_teahouse_studio_window)
        self.actionAbout.setObjectName(u"actionAbout")
        icon9 = QIcon()
        icon9.addFile(u":/icon/book.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAbout.setIcon(icon9)
        self.actionSearch_Concept = QAction(dongli_teahouse_studio_window)
        self.actionSearch_Concept.setObjectName(u"actionSearch_Concept")
        icon10 = QIcon()
        icon10.addFile(u":/icon/search.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSearch_Concept.setIcon(icon10)
        self.actionImport_File_Tree_to_Concept = QAction(dongli_teahouse_studio_window)
        self.actionImport_File_Tree_to_Concept.setObjectName(u"actionImport_File_Tree_to_Concept")
        icon11 = QIcon()
        icon11.addFile(u":/icon/download-cloud.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionImport_File_Tree_to_Concept.setIcon(icon11)
        self.actionCreate_New_Tab = QAction(dongli_teahouse_studio_window)
        self.actionCreate_New_Tab.setObjectName(u"actionCreate_New_Tab")
        icon12 = QIcon()
        icon12.addFile(u":/icon/tablet.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCreate_New_Tab.setIcon(icon12)
        self.actionHide_Current_Tab = QAction(dongli_teahouse_studio_window)
        self.actionHide_Current_Tab.setObjectName(u"actionHide_Current_Tab")
        icon13 = QIcon()
        icon13.addFile(u":/icon/archive.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionHide_Current_Tab.setIcon(icon13)
        self.actionDelete_Current_Tab = QAction(dongli_teahouse_studio_window)
        self.actionDelete_Current_Tab.setObjectName(u"actionDelete_Current_Tab")
        icon14 = QIcon()
        icon14.addFile(u":/icon/trash-2.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDelete_Current_Tab.setIcon(icon14)
        self.actionCreate_RSS_Folder = QAction(dongli_teahouse_studio_window)
        self.actionCreate_RSS_Folder.setObjectName(u"actionCreate_RSS_Folder")
        icon15 = QIcon()
        icon15.addFile(u":/icon/folder.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCreate_RSS_Folder.setIcon(icon15)
        self.actionAdd_RSS_Feed = QAction(dongli_teahouse_studio_window)
        self.actionAdd_RSS_Feed.setObjectName(u"actionAdd_RSS_Feed")
        icon16 = QIcon()
        icon16.addFile(u":/icon/rss.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_RSS_Feed.setIcon(icon16)
        self.actionOpen_WebPage_In_Browser = QAction(dongli_teahouse_studio_window)
        self.actionOpen_WebPage_In_Browser.setObjectName(u"actionOpen_WebPage_In_Browser")
        icon17 = QIcon()
        icon17.addFile(u":/icon/airplay.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOpen_WebPage_In_Browser.setIcon(icon17)
        self.actionExport_Concept_Data_to_Json = QAction(dongli_teahouse_studio_window)
        self.actionExport_Concept_Data_to_Json.setObjectName(u"actionExport_Concept_Data_to_Json")
        icon18 = QIcon()
        icon18.addFile(u":/icon/upload.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExport_Concept_Data_to_Json.setIcon(icon18)
        self.actionExport_Diary_Data_to_Json = QAction(dongli_teahouse_studio_window)
        self.actionExport_Diary_Data_to_Json.setObjectName(u"actionExport_Diary_Data_to_Json")
        self.actionExport_Diary_Data_to_Json.setIcon(icon18)
        self.actionExport_RSS_Data_to_Json = QAction(dongli_teahouse_studio_window)
        self.actionExport_RSS_Data_to_Json.setObjectName(u"actionExport_RSS_Data_to_Json")
        self.actionExport_RSS_Data_to_Json.setIcon(icon18)
        self.actionSetting = QAction(dongli_teahouse_studio_window)
        self.actionSetting.setObjectName(u"actionSetting")
        icon19 = QIcon()
        icon19.addFile(u":/icon/settings.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSetting.setIcon(icon19)
        self.actionFile_Check = QAction(dongli_teahouse_studio_window)
        self.actionFile_Check.setObjectName(u"actionFile_Check")
        icon20 = QIcon()
        icon20.addFile(u":/icon/shield.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionFile_Check.setIcon(icon20)
        self.actionExport_File_Data_to_Json = QAction(dongli_teahouse_studio_window)
        self.actionExport_File_Data_to_Json.setObjectName(u"actionExport_File_Data_to_Json")
        self.actionExport_File_Data_to_Json.setIcon(icon18)
        self.actionEdit = QAction(dongli_teahouse_studio_window)
        self.actionEdit.setObjectName(u"actionEdit")
        icon21 = QIcon()
        icon21.addFile(u":/icon/edit-3.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionEdit.setIcon(icon21)
        self.actionUpdate_Feed_Manually = QAction(dongli_teahouse_studio_window)
        self.actionUpdate_Feed_Manually.setObjectName(u"actionUpdate_Feed_Manually")
        icon22 = QIcon()
        icon22.addFile(u":/icon/refresh-cw.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionUpdate_Feed_Manually.setIcon(icon22)
        self.actionSearch_Diary_Text = QAction(dongli_teahouse_studio_window)
        self.actionSearch_Diary_Text.setObjectName(u"actionSearch_Diary_Text")
        self.actionSearch_Diary_Text.setIcon(icon10)
        self.actionSearch_File_Library = QAction(dongli_teahouse_studio_window)
        self.actionSearch_File_Library.setObjectName(u"actionSearch_File_Library")
        self.actionSearch_File_Library.setIcon(icon10)
        self.actionLocate = QAction(dongli_teahouse_studio_window)
        self.actionLocate.setObjectName(u"actionLocate")
        icon23 = QIcon()
        icon23.addFile(u":/icon/navigation.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionLocate.setIcon(icon23)
        self.actionExport_RSS_Tree_Data_to_Json = QAction(dongli_teahouse_studio_window)
        self.actionExport_RSS_Tree_Data_to_Json.setObjectName(u"actionExport_RSS_Tree_Data_to_Json")
        self.actionExport_RSS_Tree_Data_to_Json.setIcon(icon18)
        self.actionStay_on_Top = QAction(dongli_teahouse_studio_window)
        self.actionStay_on_Top.setObjectName(u"actionStay_on_Top")
        icon24 = QIcon()
        icon24.addFile(u":/icon/arrow-up.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionStay_on_Top.setIcon(icon24)
        self.actionAnalyze_Diary_with_Concept = QAction(dongli_teahouse_studio_window)
        self.actionAnalyze_Diary_with_Concept.setObjectName(u"actionAnalyze_Diary_with_Concept")
        icon25 = QIcon()
        icon25.addFile(u":/icon/aperture.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAnalyze_Diary_with_Concept.setIcon(icon25)
        self.actionStart_Daily_Update_Manually = QAction(dongli_teahouse_studio_window)
        self.actionStart_Daily_Update_Manually.setObjectName(u"actionStart_Daily_Update_Manually")
        self.actionStart_Daily_Update_Manually.setIcon(icon22)
        self.actionCreate_Zen_Folder = QAction(dongli_teahouse_studio_window)
        self.actionCreate_Zen_Folder.setObjectName(u"actionCreate_Zen_Folder")
        self.actionCreate_Zen_Folder.setIcon(icon15)
        self.actionAdd_Zen_Segment = QAction(dongli_teahouse_studio_window)
        self.actionAdd_Zen_Segment.setObjectName(u"actionAdd_Zen_Segment")
        icon26 = QIcon()
        icon26.addFile(u":/icon/star.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_Zen_Segment.setIcon(icon26)
        self.actionSwitch_between_View_Edit = QAction(dongli_teahouse_studio_window)
        self.actionSwitch_between_View_Edit.setObjectName(u"actionSwitch_between_View_Edit")
        icon27 = QIcon()
        icon27.addFile(u":/icon/toggle-left.svg", QSize(), QIcon.Normal, QIcon.Off)
        icon27.addFile(u":/icon/toggle-right.svg", QSize(), QIcon.Normal, QIcon.On)
        self.actionSwitch_between_View_Edit.setIcon(icon27)
        self.actionExport_Zen_Data_to_Json = QAction(dongli_teahouse_studio_window)
        self.actionExport_Zen_Data_to_Json.setObjectName(u"actionExport_Zen_Data_to_Json")
        self.actionExport_Zen_Data_to_Json.setIcon(icon18)
        self.actionExport_Zen_Tree_Data_to_Json = QAction(dongli_teahouse_studio_window)
        self.actionExport_Zen_Tree_Data_to_Json.setObjectName(u"actionExport_Zen_Tree_Data_to_Json")
        self.actionExport_Zen_Tree_Data_to_Json.setIcon(icon18)
        self.actionHide_Main_Window = QAction(dongli_teahouse_studio_window)
        self.actionHide_Main_Window.setObjectName(u"actionHide_Main_Window")
        icon28 = QIcon()
        icon28.addFile(u":/icon/minimize.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionHide_Main_Window.setIcon(icon28)
        self.actionRestore_Main_Window = QAction(dongli_teahouse_studio_window)
        self.actionRestore_Main_Window.setObjectName(u"actionRestore_Main_Window")
        icon29 = QIcon()
        icon29.addFile(u":/icon/umbrella.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRestore_Main_Window.setIcon(icon29)
        self.actionI_m_Feeling_Lucky = QAction(dongli_teahouse_studio_window)
        self.actionI_m_Feeling_Lucky.setObjectName(u"actionI_m_Feeling_Lucky")
        icon30 = QIcon()
        icon30.addFile(u":/icon/smile.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionI_m_Feeling_Lucky.setIcon(icon30)
        self.actionRestore_to_Normal_Size = QAction(dongli_teahouse_studio_window)
        self.actionRestore_to_Normal_Size.setObjectName(u"actionRestore_to_Normal_Size")
        icon31 = QIcon()
        icon31.addFile(u":/icon/minimize-2.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRestore_to_Normal_Size.setIcon(icon31)
        self.actionData_Security_Check = QAction(dongli_teahouse_studio_window)
        self.actionData_Security_Check.setObjectName(u"actionData_Security_Check")
        icon32 = QIcon()
        icon32.addFile(u":/icon/cpu.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionData_Security_Check.setIcon(icon32)
        self.actionBackup_Data = QAction(dongli_teahouse_studio_window)
        self.actionBackup_Data.setObjectName(u"actionBackup_Data")
        icon33 = QIcon()
        icon33.addFile(u":/icon/database.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionBackup_Data.setIcon(icon33)
        self.actionBoss_Coming = QAction(dongli_teahouse_studio_window)
        self.actionBoss_Coming.setObjectName(u"actionBoss_Coming")
        icon34 = QIcon()
        icon34.addFile(u":/icon/users.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionBoss_Coming.setIcon(icon34)
        self.centralwidget = QWidget(dongli_teahouse_studio_window)
        self.centralwidget.setObjectName(u"centralwidget")
        self.centralwidget.setStyleSheet(u"")
        self.verticalLayout_4 = QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.verticalLayout_4.setContentsMargins(5, 8, 5, 0)
        self.central_frame = QFrame(self.centralwidget)
        self.central_frame.setObjectName(u"central_frame")
        self.central_frame.setStyleSheet(u"")
        self.verticalLayout_2 = QVBoxLayout(self.central_frame)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.title_frame = QFrame(self.central_frame)
        self.title_frame.setObjectName(u"title_frame")
        sizePolicy = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.title_frame.sizePolicy().hasHeightForWidth())
        self.title_frame.setSizePolicy(sizePolicy)
        self.title_frame.setStyleSheet(u"")
        self.horizontalLayout = QHBoxLayout(self.title_frame)
        self.horizontalLayout.setSpacing(10)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.horizontalLayout.setContentsMargins(5, 0, 5, 0)
        self.btn_menu = QPushButton(self.title_frame)
        self.btn_menu.setObjectName(u"btn_menu")
        sizePolicy1 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.btn_menu.sizePolicy().hasHeightForWidth())
        self.btn_menu.setSizePolicy(sizePolicy1)
        self.btn_menu.setMinimumSize(QSize(36, 36))
        self.btn_menu.setMaximumSize(QSize(36, 36))
        self.btn_menu.setStyleSheet(u"QPushButton:hover{\n"
"	background-color: rgba(255, 255, 255, 0);\n"
"}\n"
"QPushButton:pressed {	\n"
"	background-color: rgba(255, 255, 255, 0);\n"
"}")
        self.btn_menu.setIcon(icon)
        self.btn_menu.setIconSize(QSize(36, 36))

        self.horizontalLayout.addWidget(self.btn_menu)

        self.label_title_bar_top = MyTitleLabel(self.title_frame)
        self.label_title_bar_top.setObjectName(u"label_title_bar_top")
        sizePolicy2 = QSizePolicy(QSizePolicy.MinimumExpanding, QSizePolicy.Fixed)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.label_title_bar_top.sizePolicy().hasHeightForWidth())
        self.label_title_bar_top.setSizePolicy(sizePolicy2)
        font = QFont()
        font.setFamily(u"Segoe UI")
        font.setPointSize(18)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        font.setKerning(True)
        font.setStyleStrategy(QFont.PreferDefault)
        self.label_title_bar_top.setFont(font)
        self.label_title_bar_top.setStyleSheet(u"")

        self.horizontalLayout.addWidget(self.label_title_bar_top)

        self.btn_minimize = QPushButton(self.title_frame)
        self.btn_minimize.setObjectName(u"btn_minimize")
        sizePolicy1.setHeightForWidth(self.btn_minimize.sizePolicy().hasHeightForWidth())
        self.btn_minimize.setSizePolicy(sizePolicy1)
        self.btn_minimize.setMinimumSize(QSize(24, 24))
        self.btn_minimize.setMaximumSize(QSize(24, 24))
        self.btn_minimize.setStyleSheet(u"")
        icon35 = QIcon()
        icon35.addFile(u":/icon/cil-window-minimize.png", QSize(), QIcon.Normal, QIcon.Off)
        self.btn_minimize.setIcon(icon35)
        self.btn_minimize.setIconSize(QSize(24, 24))

        self.horizontalLayout.addWidget(self.btn_minimize)

        self.btn_maximize = QPushButton(self.title_frame)
        self.btn_maximize.setObjectName(u"btn_maximize")
        sizePolicy1.setHeightForWidth(self.btn_maximize.sizePolicy().hasHeightForWidth())
        self.btn_maximize.setSizePolicy(sizePolicy1)
        self.btn_maximize.setMinimumSize(QSize(24, 24))
        self.btn_maximize.setMaximumSize(QSize(24, 24))
        self.btn_maximize.setStyleSheet(u"")
        icon36 = QIcon()
        icon36.addFile(u":/icon/cil-window-maximize.png", QSize(), QIcon.Normal, QIcon.Off)
        self.btn_maximize.setIcon(icon36)
        self.btn_maximize.setIconSize(QSize(24, 24))

        self.horizontalLayout.addWidget(self.btn_maximize)

        self.btn_close = QPushButton(self.title_frame)
        self.btn_close.setObjectName(u"btn_close")
        sizePolicy1.setHeightForWidth(self.btn_close.sizePolicy().hasHeightForWidth())
        self.btn_close.setSizePolicy(sizePolicy1)
        self.btn_close.setMinimumSize(QSize(24, 24))
        self.btn_close.setMaximumSize(QSize(24, 24))
        self.btn_close.setStyleSheet(u"")
        icon37 = QIcon()
        icon37.addFile(u":/icon/cil-x.png", QSize(), QIcon.Normal, QIcon.Off)
        self.btn_close.setIcon(icon37)
        self.btn_close.setIconSize(QSize(24, 24))

        self.horizontalLayout.addWidget(self.btn_close)


        self.verticalLayout_2.addWidget(self.title_frame)

        self.horizontalLayout_10 = QHBoxLayout()
        self.horizontalLayout_10.setSpacing(0)
        self.horizontalLayout_10.setObjectName(u"horizontalLayout_10")
        self.stack_btn_frame = QFrame(self.central_frame)
        self.stack_btn_frame.setObjectName(u"stack_btn_frame")
        self.stack_btn_frame.setStyleSheet(u"")
        self.stack_btn_layout = QVBoxLayout(self.stack_btn_frame)
        self.stack_btn_layout.setSpacing(15)
        self.stack_btn_layout.setObjectName(u"stack_btn_layout")
        self.stack_btn_layout.setContentsMargins(5, 15, 5, 15)
        self.btn_stack_home = MyStackButton(self.stack_btn_frame)
        self.btn_stack_home.setObjectName(u"btn_stack_home")
        sizePolicy1.setHeightForWidth(self.btn_stack_home.sizePolicy().hasHeightForWidth())
        self.btn_stack_home.setSizePolicy(sizePolicy1)
        self.btn_stack_home.setMinimumSize(QSize(36, 36))
        self.btn_stack_home.setMaximumSize(QSize(36, 36))
        self.btn_stack_home.setStyleSheet(u"")
        icon38 = QIcon()
        icon38.addFile(u":/icon/home.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.btn_stack_home.setIcon(icon38)
        self.btn_stack_home.setIconSize(QSize(36, 36))
        self.btn_stack_home.setFlat(False)

        self.stack_btn_layout.addWidget(self.btn_stack_home)

        self.btn_stack_rss = MyStackButton(self.stack_btn_frame)
        self.btn_stack_rss.setObjectName(u"btn_stack_rss")
        sizePolicy1.setHeightForWidth(self.btn_stack_rss.sizePolicy().hasHeightForWidth())
        self.btn_stack_rss.setSizePolicy(sizePolicy1)
        self.btn_stack_rss.setMinimumSize(QSize(36, 36))
        self.btn_stack_rss.setMaximumSize(QSize(36, 36))
        self.btn_stack_rss.setStyleSheet(u"")
        self.btn_stack_rss.setIcon(icon16)
        self.btn_stack_rss.setIconSize(QSize(36, 36))
        self.btn_stack_rss.setFlat(False)

        self.stack_btn_layout.addWidget(self.btn_stack_rss)

        self.btn_stack_diary = MyStackButton(self.stack_btn_frame)
        self.btn_stack_diary.setObjectName(u"btn_stack_diary")
        sizePolicy1.setHeightForWidth(self.btn_stack_diary.sizePolicy().hasHeightForWidth())
        self.btn_stack_diary.setSizePolicy(sizePolicy1)
        self.btn_stack_diary.setMinimumSize(QSize(36, 36))
        self.btn_stack_diary.setMaximumSize(QSize(36, 36))
        self.btn_stack_diary.setStyleSheet(u"")
        icon39 = QIcon()
        icon39.addFile(u":/icon/book-open.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.btn_stack_diary.setIcon(icon39)
        self.btn_stack_diary.setIconSize(QSize(36, 36))
        self.btn_stack_diary.setFlat(False)

        self.stack_btn_layout.addWidget(self.btn_stack_diary)

        self.btn_stack_zen = MyStackButton(self.stack_btn_frame)
        self.btn_stack_zen.setObjectName(u"btn_stack_zen")
        sizePolicy1.setHeightForWidth(self.btn_stack_zen.sizePolicy().hasHeightForWidth())
        self.btn_stack_zen.setSizePolicy(sizePolicy1)
        self.btn_stack_zen.setMinimumSize(QSize(36, 36))
        self.btn_stack_zen.setMaximumSize(QSize(36, 36))
        self.btn_stack_zen.setStyleSheet(u"")
        icon40 = QIcon()
        icon40.addFile(u":/icon/moon.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.btn_stack_zen.setIcon(icon40)
        self.btn_stack_zen.setIconSize(QSize(36, 36))
        self.btn_stack_zen.setFlat(False)

        self.stack_btn_layout.addWidget(self.btn_stack_zen)

        self.btn_stack_tab = MyStackButton(self.stack_btn_frame)
        self.btn_stack_tab.setObjectName(u"btn_stack_tab")
        sizePolicy1.setHeightForWidth(self.btn_stack_tab.sizePolicy().hasHeightForWidth())
        self.btn_stack_tab.setSizePolicy(sizePolicy1)
        self.btn_stack_tab.setMinimumSize(QSize(36, 36))
        self.btn_stack_tab.setMaximumSize(QSize(36, 36))
        self.btn_stack_tab.setStyleSheet(u"")
        icon41 = QIcon()
        icon41.addFile(u":/icon/layout.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.btn_stack_tab.setIcon(icon41)
        self.btn_stack_tab.setIconSize(QSize(36, 36))
        self.btn_stack_tab.setFlat(False)

        self.stack_btn_layout.addWidget(self.btn_stack_tab)

        self.verticalSpacer = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.stack_btn_layout.addItem(self.verticalSpacer)

        self.btn_stack_menu = QPushButton(self.stack_btn_frame)
        self.btn_stack_menu.setObjectName(u"btn_stack_menu")
        sizePolicy1.setHeightForWidth(self.btn_stack_menu.sizePolicy().hasHeightForWidth())
        self.btn_stack_menu.setSizePolicy(sizePolicy1)
        self.btn_stack_menu.setMinimumSize(QSize(36, 36))
        self.btn_stack_menu.setMaximumSize(QSize(36, 36))
        self.btn_stack_menu.setStyleSheet(u"")
        icon42 = QIcon()
        icon42.addFile(u":/icon/more-vertical.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.btn_stack_menu.setIcon(icon42)
        self.btn_stack_menu.setIconSize(QSize(36, 36))
        self.btn_stack_menu.setFlat(False)

        self.stack_btn_layout.addWidget(self.btn_stack_menu)


        self.horizontalLayout_10.addWidget(self.stack_btn_frame)

        self.stackedWidget = QStackedWidget(self.central_frame)
        self.stackedWidget.setObjectName(u"stackedWidget")
        self.stackedWidget.setMinimumSize(QSize(800, 800))
        self.stackedWidgetPage_home = QWidget()
        self.stackedWidgetPage_home.setObjectName(u"stackedWidgetPage_home")
        self.verticalLayout_8 = QVBoxLayout(self.stackedWidgetPage_home)
        self.verticalLayout_8.setSpacing(15)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.verticalLayout_8.setContentsMargins(9, 9, 9, 9)
        self.label_home = QLabel(self.stackedWidgetPage_home)
        self.label_home.setObjectName(u"label_home")
        sizePolicy3 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.label_home.sizePolicy().hasHeightForWidth())
        self.label_home.setSizePolicy(sizePolicy3)
        self.label_home.setMinimumSize(QSize(0, 0))
        font1 = QFont()
        font1.setFamily(u"Segoe UI")
        font1.setPointSize(52)
        font1.setBold(True)
        font1.setWeight(75)
        self.label_home.setFont(font1)
        self.label_home.setAlignment(Qt.AlignBottom|Qt.AlignHCenter)

        self.verticalLayout_8.addWidget(self.label_home)

        self.horizontalLayout_14 = QHBoxLayout()
        self.horizontalLayout_14.setSpacing(0)
        self.horizontalLayout_14.setObjectName(u"horizontalLayout_14")
        self.label_hello = MyDockTitleLabel(self.stackedWidgetPage_home)
        self.label_hello.setObjectName(u"label_hello")
        font2 = QFont()
        font2.setFamily(u"Segoe UI")
        font2.setPointSize(24)
        font2.setBold(True)
        font2.setWeight(75)
        self.label_hello.setFont(font2)
        self.label_hello.setTextFormat(Qt.AutoText)
        self.label_hello.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.label_hello.setWordWrap(True)
        self.label_hello.setMargin(0)

        self.horizontalLayout_14.addWidget(self.label_hello)


        self.verticalLayout_8.addLayout(self.horizontalLayout_14)

        self.stackedWidget.addWidget(self.stackedWidgetPage_home)
        self.stackedWidgetPage_rss = QWidget()
        self.stackedWidgetPage_rss.setObjectName(u"stackedWidgetPage_rss")
        self.verticalLayout_10 = QVBoxLayout(self.stackedWidgetPage_rss)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName(u"verticalLayout_10")
        self.frame = QFrame(self.stackedWidgetPage_rss)
        self.frame.setObjectName(u"frame")
        self.frame.setFrameShape(QFrame.StyledPanel)
        self.frame.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_3 = QHBoxLayout(self.frame)
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.splitter_rss = QSplitter(self.frame)
        self.splitter_rss.setObjectName(u"splitter_rss")
        self.splitter_rss.setOrientation(Qt.Horizontal)
        self.splitter_rss.setHandleWidth(10)
        self.layoutWidget4 = QWidget(self.splitter_rss)
        self.layoutWidget4.setObjectName(u"layoutWidget4")
        self.verticalLayout = QVBoxLayout(self.layoutWidget4)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.lineEdit_rss_search = QLineEdit(self.layoutWidget4)
        self.lineEdit_rss_search.setObjectName(u"lineEdit_rss_search")

        self.verticalLayout.addWidget(self.lineEdit_rss_search)

        self.treeWidget_rss = MyTreeWidget(self.layoutWidget4)
        self.treeWidget_rss.setObjectName(u"treeWidget_rss")
        self.treeWidget_rss.setTabKeyNavigation(True)
        self.treeWidget_rss.setDragEnabled(True)
        self.treeWidget_rss.setDragDropMode(QAbstractItemView.InternalMove)
        self.treeWidget_rss.setAlternatingRowColors(False)
        self.treeWidget_rss.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.treeWidget_rss.setAutoExpandDelay(750)
        self.treeWidget_rss.setIndentation(20)
        self.treeWidget_rss.setRootIsDecorated(True)
        self.treeWidget_rss.setUniformRowHeights(False)
        self.treeWidget_rss.setItemsExpandable(True)
        self.treeWidget_rss.setSortingEnabled(False)
        self.treeWidget_rss.setAnimated(True)
        self.treeWidget_rss.setAllColumnsShowFocus(False)
        self.treeWidget_rss.setExpandsOnDoubleClick(False)
        self.treeWidget_rss.header().setVisible(False)

        self.verticalLayout.addWidget(self.treeWidget_rss)

        self.splitter_rss.addWidget(self.layoutWidget4)
        self.listWidget_rss = QListWidget(self.splitter_rss)
        self.listWidget_rss.setObjectName(u"listWidget_rss")
        self.listWidget_rss.setProperty("isWrapping", False)
        self.listWidget_rss.setSpacing(10)
        self.listWidget_rss.setWordWrap(True)
        self.splitter_rss.addWidget(self.listWidget_rss)
        self.verticalLayoutWidget = QWidget(self.splitter_rss)
        self.verticalLayoutWidget.setObjectName(u"verticalLayoutWidget")
        self.verticalLayout_browser = QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout_browser.setSpacing(4)
        self.verticalLayout_browser.setObjectName(u"verticalLayout_browser")
        self.verticalLayout_browser.setContentsMargins(0, 0, 0, 0)
        self.lineEdit_browser = QLineEdit(self.verticalLayoutWidget)
        self.lineEdit_browser.setObjectName(u"lineEdit_browser")
        self.lineEdit_browser.setDragEnabled(True)

        self.verticalLayout_browser.addWidget(self.lineEdit_browser)

        self.splitter_rss.addWidget(self.verticalLayoutWidget)

        self.horizontalLayout_3.addWidget(self.splitter_rss)


        self.verticalLayout_10.addWidget(self.frame)

        self.stackedWidget.addWidget(self.stackedWidgetPage_rss)
        self.stackedWidgetPage_diary = QWidget()
        self.stackedWidgetPage_diary.setObjectName(u"stackedWidgetPage_diary")
        self.verticalLayout_15 = QVBoxLayout(self.stackedWidgetPage_diary)
        self.verticalLayout_15.setSpacing(0)
        self.verticalLayout_15.setObjectName(u"verticalLayout_15")
        self.frame_2 = QFrame(self.stackedWidgetPage_diary)
        self.frame_2.setObjectName(u"frame_2")
        self.frame_2.setFrameShape(QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_2 = QHBoxLayout(self.frame_2)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.textEdit_viewer = QTextEdit(self.frame_2)
        self.textEdit_viewer.setObjectName(u"textEdit_viewer")
        self.textEdit_viewer.setReadOnly(True)

        self.horizontalLayout_2.addWidget(self.textEdit_viewer)


        self.verticalLayout_15.addWidget(self.frame_2)

        self.stackedWidget.addWidget(self.stackedWidgetPage_diary)
        self.stackedWidgetPage_zen = QWidget()
        self.stackedWidgetPage_zen.setObjectName(u"stackedWidgetPage_zen")
        self.verticalLayout_22 = QVBoxLayout(self.stackedWidgetPage_zen)
        self.verticalLayout_22.setSpacing(0)
        self.verticalLayout_22.setObjectName(u"verticalLayout_22")
        self.frame_3 = QFrame(self.stackedWidgetPage_zen)
        self.frame_3.setObjectName(u"frame_3")
        self.frame_3.setFrameShape(QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_6 = QHBoxLayout(self.frame_3)
        self.horizontalLayout_6.setObjectName(u"horizontalLayout_6")
        self.splitter_zen = QSplitter(self.frame_3)
        self.splitter_zen.setObjectName(u"splitter_zen")
        self.splitter_zen.setOrientation(Qt.Horizontal)
        self.splitter_zen.setHandleWidth(10)
        self.layoutWidget = QWidget(self.splitter_zen)
        self.layoutWidget.setObjectName(u"layoutWidget")
        self.verticalLayout_9 = QVBoxLayout(self.layoutWidget)
        self.verticalLayout_9.setObjectName(u"verticalLayout_9")
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.lineEdit_zen_search = QLineEdit(self.layoutWidget)
        self.lineEdit_zen_search.setObjectName(u"lineEdit_zen_search")

        self.verticalLayout_9.addWidget(self.lineEdit_zen_search)

        self.treeWidget_zen = MyTreeWidget(self.layoutWidget)
        self.treeWidget_zen.setObjectName(u"treeWidget_zen")
        self.treeWidget_zen.setTabKeyNavigation(True)
        self.treeWidget_zen.setDragEnabled(True)
        self.treeWidget_zen.setDragDropMode(QAbstractItemView.InternalMove)
        self.treeWidget_zen.setAlternatingRowColors(False)
        self.treeWidget_zen.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.treeWidget_zen.setAutoExpandDelay(750)
        self.treeWidget_zen.setIndentation(20)
        self.treeWidget_zen.setRootIsDecorated(True)
        self.treeWidget_zen.setUniformRowHeights(False)
        self.treeWidget_zen.setItemsExpandable(True)
        self.treeWidget_zen.setSortingEnabled(False)
        self.treeWidget_zen.setAnimated(True)
        self.treeWidget_zen.setAllColumnsShowFocus(False)
        self.treeWidget_zen.setExpandsOnDoubleClick(False)
        self.treeWidget_zen.header().setVisible(False)

        self.verticalLayout_9.addWidget(self.treeWidget_zen)

        self.splitter_zen.addWidget(self.layoutWidget)
        self.layoutWidget5 = QWidget(self.splitter_zen)
        self.layoutWidget5.setObjectName(u"layoutWidget5")
        self.verticalLayout_11 = QVBoxLayout(self.layoutWidget5)
        self.verticalLayout_11.setObjectName(u"verticalLayout_11")
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.stackedWidget_zen = QStackedWidget(self.layoutWidget5)
        self.stackedWidget_zen.setObjectName(u"stackedWidget_zen")
        self.page_3 = QWidget()
        self.page_3.setObjectName(u"page_3")
        self.horizontalLayout_4 = QHBoxLayout(self.page_3)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName(u"horizontalLayout_4")
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.textEdit_viewer_zen = QTextBrowser(self.page_3)
        self.textEdit_viewer_zen.setObjectName(u"textEdit_viewer_zen")
        self.textEdit_viewer_zen.setStyleSheet(u"")
        self.textEdit_viewer_zen.setReadOnly(True)
        self.textEdit_viewer_zen.setTextInteractionFlags(Qt.LinksAccessibleByMouse|Qt.TextSelectableByMouse)
        self.textEdit_viewer_zen.setOpenExternalLinks(True)

        self.horizontalLayout_4.addWidget(self.textEdit_viewer_zen)

        self.stackedWidget_zen.addWidget(self.page_3)
        self.page_4 = QWidget()
        self.page_4.setObjectName(u"page_4")
        self.horizontalLayout_5 = QHBoxLayout(self.page_4)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName(u"horizontalLayout_5")
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.plainTextEdit_zen = MyPlainTextEdit(self.page_4)
        self.plainTextEdit_zen.setObjectName(u"plainTextEdit_zen")

        self.horizontalLayout_5.addWidget(self.plainTextEdit_zen)

        self.stackedWidget_zen.addWidget(self.page_4)

        self.verticalLayout_11.addWidget(self.stackedWidget_zen)

        self.horizontalLayout_11 = QHBoxLayout()
        self.horizontalLayout_11.setObjectName(u"horizontalLayout_11")
        self.pushButton_typora = QPushButton(self.layoutWidget5)
        self.pushButton_typora.setObjectName(u"pushButton_typora")
        sizePolicy1.setHeightForWidth(self.pushButton_typora.sizePolicy().hasHeightForWidth())
        self.pushButton_typora.setSizePolicy(sizePolicy1)
        self.pushButton_typora.setMinimumSize(QSize(36, 36))
        self.pushButton_typora.setMaximumSize(QSize(36, 36))
        icon43 = QIcon()
        icon43.addFile(u":/icon/typora_icon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.pushButton_typora.setIcon(icon43)
        self.pushButton_typora.setIconSize(QSize(32, 32))
        self.pushButton_typora.setFlat(True)

        self.horizontalLayout_11.addWidget(self.pushButton_typora)

        self.pushButton_sublime = QPushButton(self.layoutWidget5)
        self.pushButton_sublime.setObjectName(u"pushButton_sublime")
        sizePolicy1.setHeightForWidth(self.pushButton_sublime.sizePolicy().hasHeightForWidth())
        self.pushButton_sublime.setSizePolicy(sizePolicy1)
        self.pushButton_sublime.setMinimumSize(QSize(36, 36))
        self.pushButton_sublime.setMaximumSize(QSize(36, 36))
        icon44 = QIcon()
        icon44.addFile(u":/icon/sublime_icon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.pushButton_sublime.setIcon(icon44)
        self.pushButton_sublime.setIconSize(QSize(32, 32))
        self.pushButton_sublime.setFlat(True)

        self.horizontalLayout_11.addWidget(self.pushButton_sublime)

        self.line = QFrame(self.layoutWidget5)
        self.line.setObjectName(u"line")
        self.line.setFrameShape(QFrame.VLine)
        self.line.setFrameShadow(QFrame.Sunken)

        self.horizontalLayout_11.addWidget(self.line)

        self.lineEdit_zen_text_search = QLineEdit(self.layoutWidget5)
        self.lineEdit_zen_text_search.setObjectName(u"lineEdit_zen_text_search")
        sizePolicy4 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.lineEdit_zen_text_search.sizePolicy().hasHeightForWidth())
        self.lineEdit_zen_text_search.setSizePolicy(sizePolicy4)

        self.horizontalLayout_11.addWidget(self.lineEdit_zen_text_search)

        self.label_zen_text_search = QLabel(self.layoutWidget5)
        self.label_zen_text_search.setObjectName(u"label_zen_text_search")
        sizePolicy3.setHeightForWidth(self.label_zen_text_search.sizePolicy().hasHeightForWidth())
        self.label_zen_text_search.setSizePolicy(sizePolicy3)
        self.label_zen_text_search.setMinimumSize(QSize(0, 0))
        self.label_zen_text_search.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)

        self.horizontalLayout_11.addWidget(self.label_zen_text_search)


        self.verticalLayout_11.addLayout(self.horizontalLayout_11)

        self.splitter_zen.addWidget(self.layoutWidget5)
        self.treeWidget_segment = MyTreeWidget(self.splitter_zen)
        self.treeWidget_segment.setObjectName(u"treeWidget_segment")
        self.treeWidget_segment.setTabKeyNavigation(True)
        self.treeWidget_segment.setDragEnabled(True)
        self.treeWidget_segment.setDragDropMode(QAbstractItemView.InternalMove)
        self.treeWidget_segment.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.treeWidget_segment.setAutoExpandDelay(750)
        self.treeWidget_segment.setAnimated(True)
        self.treeWidget_segment.setHeaderHidden(True)
        self.treeWidget_segment.setExpandsOnDoubleClick(False)
        self.splitter_zen.addWidget(self.treeWidget_segment)

        self.horizontalLayout_6.addWidget(self.splitter_zen)


        self.verticalLayout_22.addWidget(self.frame_3)

        self.stackedWidget.addWidget(self.stackedWidgetPage_zen)
        self.stackedWidgetPage_tab = QWidget()
        self.stackedWidgetPage_tab.setObjectName(u"stackedWidgetPage_tab")
        self.horizontalLayout_9 = QHBoxLayout(self.stackedWidgetPage_tab)
        self.horizontalLayout_9.setSpacing(0)
        self.horizontalLayout_9.setObjectName(u"horizontalLayout_9")
        self.horizontalLayout_9.setContentsMargins(9, 9, 9, 9)
        self.tabWidget = QTabWidget(self.stackedWidgetPage_tab)
        self.tabWidget.setObjectName(u"tabWidget")

        self.horizontalLayout_9.addWidget(self.tabWidget)

        self.stackedWidget.addWidget(self.stackedWidgetPage_tab)

        self.horizontalLayout_10.addWidget(self.stackedWidget)


        self.verticalLayout_2.addLayout(self.horizontalLayout_10)


        self.verticalLayout_4.addWidget(self.central_frame)

        dongli_teahouse_studio_window.setCentralWidget(self.centralwidget)
        self.dockWidget_diary = QDockWidget(dongli_teahouse_studio_window)
        self.dockWidget_diary.setObjectName(u"dockWidget_diary")
        self.dockWidget_diary.setMinimumSize(QSize(292, 593))
        self.dockWidget_diary.setStyleSheet(u"")
        self.dockWidget_diary.setFeatures(QDockWidget.AllDockWidgetFeatures)
        self.dockWidgetContents_6 = QWidget()
        self.dockWidgetContents_6.setObjectName(u"dockWidgetContents_6")
        self.verticalLayout_13 = QVBoxLayout(self.dockWidgetContents_6)
        self.verticalLayout_13.setSpacing(0)
        self.verticalLayout_13.setObjectName(u"verticalLayout_13")
        self.verticalLayout_13.setContentsMargins(8, 8, 5, 5)
        self.verticalLayout_3 = QVBoxLayout()
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.verticalWidget_titlebar_diary = QWidget(self.dockWidgetContents_6)
        self.verticalWidget_titlebar_diary.setObjectName(u"verticalWidget_titlebar_diary")
        self.verticalLayout_16 = QVBoxLayout(self.verticalWidget_titlebar_diary)
        self.verticalLayout_16.setSpacing(0)
        self.verticalLayout_16.setObjectName(u"verticalLayout_16")
        self.verticalLayout_16.setContentsMargins(8, 8, 5, 0)
        self.horizontalWidget_titlebar_diary = QWidget(self.verticalWidget_titlebar_diary)
        self.horizontalWidget_titlebar_diary.setObjectName(u"horizontalWidget_titlebar_diary")
        self.horizontalLayout_titlebar_concept_2 = QHBoxLayout(self.horizontalWidget_titlebar_diary)
        self.horizontalLayout_titlebar_concept_2.setSpacing(4)
        self.horizontalLayout_titlebar_concept_2.setObjectName(u"horizontalLayout_titlebar_concept_2")
        self.horizontalLayout_titlebar_concept_2.setContentsMargins(0, 0, 0, 0)
        self.label_diary_icon = MyDockTitleLabel(self.horizontalWidget_titlebar_diary)
        self.label_diary_icon.setObjectName(u"label_diary_icon")
        sizePolicy1.setHeightForWidth(self.label_diary_icon.sizePolicy().hasHeightForWidth())
        self.label_diary_icon.setSizePolicy(sizePolicy1)
        self.label_diary_icon.setMaximumSize(QSize(16, 16))
        self.label_diary_icon.setPixmap(QPixmap(u":/icon/feather.svg"))
        self.label_diary_icon.setScaledContents(True)

        self.horizontalLayout_titlebar_concept_2.addWidget(self.label_diary_icon)

        self.label_titlebar_diary = QLabel(self.horizontalWidget_titlebar_diary)
        self.label_titlebar_diary.setObjectName(u"label_titlebar_diary")

        self.horizontalLayout_titlebar_concept_2.addWidget(self.label_titlebar_diary)

        self.pushButton_diary_close = QPushButton(self.horizontalWidget_titlebar_diary)
        self.pushButton_diary_close.setObjectName(u"pushButton_diary_close")
        sizePolicy5 = QSizePolicy(QSizePolicy.Maximum, QSizePolicy.Preferred)
        sizePolicy5.setHorizontalStretch(0)
        sizePolicy5.setVerticalStretch(0)
        sizePolicy5.setHeightForWidth(self.pushButton_diary_close.sizePolicy().hasHeightForWidth())
        self.pushButton_diary_close.setSizePolicy(sizePolicy5)
        self.pushButton_diary_close.setMinimumSize(QSize(16, 16))
        self.pushButton_diary_close.setMaximumSize(QSize(16, 16))
        self.pushButton_diary_close.setStyleSheet(u"")
        icon45 = QIcon()
        icon45.addFile(u":/icon/x-circle.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.pushButton_diary_close.setIcon(icon45)
        self.pushButton_diary_close.setIconSize(QSize(16, 16))
        self.pushButton_diary_close.setFlat(False)

        self.horizontalLayout_titlebar_concept_2.addWidget(self.pushButton_diary_close)


        self.verticalLayout_16.addWidget(self.horizontalWidget_titlebar_diary)


        self.verticalLayout_3.addWidget(self.verticalWidget_titlebar_diary)

        self.splitter_text = QSplitter(self.dockWidgetContents_6)
        self.splitter_text.setObjectName(u"splitter_text")
        self.splitter_text.setOrientation(Qt.Vertical)
        self.splitter_text.setHandleWidth(10)
        self.calendarWidget = QCalendarWidget(self.splitter_text)
        self.calendarWidget.setObjectName(u"calendarWidget")
        sizePolicy.setHeightForWidth(self.calendarWidget.sizePolicy().hasHeightForWidth())
        self.calendarWidget.setSizePolicy(sizePolicy)
        self.calendarWidget.setMinimumSize(QSize(270, 0))
        self.calendarWidget.setMaximumSize(QSize(16777215, 270))
        self.calendarWidget.setLayoutDirection(Qt.LeftToRight)
        self.calendarWidget.setMinimumDate(QDate(1970, 1, 1))
        self.calendarWidget.setMaximumDate(QDate(2169, 12, 31))
        self.calendarWidget.setGridVisible(True)
        self.calendarWidget.setSelectionMode(QCalendarWidget.SingleSelection)
        self.calendarWidget.setHorizontalHeaderFormat(QCalendarWidget.ShortDayNames)
        self.calendarWidget.setVerticalHeaderFormat(QCalendarWidget.ISOWeekNumbers)
        self.calendarWidget.setNavigationBarVisible(True)
        self.calendarWidget.setDateEditEnabled(True)
        self.splitter_text.addWidget(self.calendarWidget)
        self.plainTextEdit_single_line = MyPlainTextEdit(self.splitter_text)
        self.plainTextEdit_single_line.setObjectName(u"plainTextEdit_single_line")
        self.plainTextEdit_single_line.setEnabled(False)
        self.plainTextEdit_single_line.setMinimumSize(QSize(270, 0))
        self.splitter_text.addWidget(self.plainTextEdit_single_line)
        self.listWidget_lines = MyLineEditList(self.splitter_text)
        self.listWidget_lines.setObjectName(u"listWidget_lines")
        self.listWidget_lines.setMinimumSize(QSize(270, 0))
        self.listWidget_lines.setStyleSheet(u"QListWidget::item {\n"
"    background-color:rgb(51, 51, 51);\n"
"}\n"
"\n"
"QListWidget::item:selected {\n"
"    border-radius:5px;\n"
"    background-color:rgb(73, 73, 73);\n"
"}")
        self.listWidget_lines.setDragEnabled(True)
        self.listWidget_lines.setDragDropMode(QAbstractItemView.InternalMove)
        self.listWidget_lines.setDefaultDropAction(Qt.MoveAction)
        self.listWidget_lines.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget_lines.setSpacing(10)
        self.listWidget_lines.setWordWrap(True)
        self.listWidget_lines.setSelectionRectVisible(True)
        self.splitter_text.addWidget(self.listWidget_lines)
        self.toolBox_text = QToolBox(self.splitter_text)
        self.toolBox_text.setObjectName(u"toolBox_text")
        self.toolBox_text.setLayoutDirection(Qt.LeftToRight)
        self.toolBox_text.setFrameShape(QFrame.NoFrame)
        self.toolBox_text.setFrameShadow(QFrame.Plain)
        self.page_text_related_concept = QWidget()
        self.page_text_related_concept.setObjectName(u"page_text_related_concept")
        self.page_text_related_concept.setGeometry(QRect(0, 0, 277, 155))
        self.horizontalLayout_8 = QHBoxLayout(self.page_text_related_concept)
        self.horizontalLayout_8.setSpacing(0)
        self.horizontalLayout_8.setObjectName(u"horizontalLayout_8")
        self.horizontalLayout_8.setContentsMargins(5, 5, 5, 5)
        self.listWidget_text_related_concept = QListWidget(self.page_text_related_concept)
        self.listWidget_text_related_concept.setObjectName(u"listWidget_text_related_concept")
        self.listWidget_text_related_concept.setDragEnabled(False)
        self.listWidget_text_related_concept.setDragDropOverwriteMode(False)
        self.listWidget_text_related_concept.setDragDropMode(QAbstractItemView.InternalMove)
        self.listWidget_text_related_concept.setDefaultDropAction(Qt.MoveAction)
        self.listWidget_text_related_concept.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget_text_related_concept.setMovement(QListView.Free)
        self.listWidget_text_related_concept.setFlow(QListView.LeftToRight)
        self.listWidget_text_related_concept.setResizeMode(QListView.Adjust)
        self.listWidget_text_related_concept.setSpacing(5)
        self.listWidget_text_related_concept.setViewMode(QListView.IconMode)
        self.listWidget_text_related_concept.setWordWrap(False)
        self.listWidget_text_related_concept.setSelectionRectVisible(True)

        self.horizontalLayout_8.addWidget(self.listWidget_text_related_concept)

        icon46 = QIcon()
        icon46.addFile(u":/icon/bookmark.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.toolBox_text.addItem(self.page_text_related_concept, icon46, u"Text Related Concept")
        self.page_text_linked_file = QWidget()
        self.page_text_linked_file.setObjectName(u"page_text_linked_file")
        self.page_text_linked_file.setGeometry(QRect(0, 0, 277, 155))
        self.horizontalLayout_7 = QHBoxLayout(self.page_text_linked_file)
        self.horizontalLayout_7.setSpacing(0)
        self.horizontalLayout_7.setObjectName(u"horizontalLayout_7")
        self.horizontalLayout_7.setContentsMargins(5, 5, 5, 5)
        self.listWidget_text_linked_file = MyConceptLinkedFileList(self.page_text_linked_file)
        self.listWidget_text_linked_file.setObjectName(u"listWidget_text_linked_file")
        self.listWidget_text_linked_file.setMinimumSize(QSize(0, 0))
        self.listWidget_text_linked_file.setProperty("showDropIndicator", False)
        self.listWidget_text_linked_file.setDragEnabled(True)
        self.listWidget_text_linked_file.setDragDropMode(QAbstractItemView.InternalMove)
        self.listWidget_text_linked_file.setDefaultDropAction(Qt.CopyAction)
        self.listWidget_text_linked_file.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget_text_linked_file.setIconSize(QSize(48, 48))
        self.listWidget_text_linked_file.setMovement(QListView.Free)
        self.listWidget_text_linked_file.setFlow(QListView.LeftToRight)
        self.listWidget_text_linked_file.setResizeMode(QListView.Adjust)
        self.listWidget_text_linked_file.setLayoutMode(QListView.SinglePass)
        self.listWidget_text_linked_file.setSpacing(16)
        self.listWidget_text_linked_file.setGridSize(QSize(96, 128))
        self.listWidget_text_linked_file.setViewMode(QListView.IconMode)
        self.listWidget_text_linked_file.setWordWrap(True)
        self.listWidget_text_linked_file.setSelectionRectVisible(True)

        self.horizontalLayout_7.addWidget(self.listWidget_text_linked_file)

        icon47 = QIcon()
        icon47.addFile(u":/icon/file.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.toolBox_text.addItem(self.page_text_linked_file, icon47, u"Text Linked File")
        self.splitter_text.addWidget(self.toolBox_text)

        self.verticalLayout_3.addWidget(self.splitter_text)

        self.horizontalFrame_diary = QFrame(self.dockWidgetContents_6)
        self.horizontalFrame_diary.setObjectName(u"horizontalFrame_diary")
        self.horizontalLayout_sizegrip_concept_2 = QHBoxLayout(self.horizontalFrame_diary)
        self.horizontalLayout_sizegrip_concept_2.setSpacing(0)
        self.horizontalLayout_sizegrip_concept_2.setObjectName(u"horizontalLayout_sizegrip_concept_2")
        self.horizontalLayout_sizegrip_concept_2.setContentsMargins(0, 0, 0, 0)
        self.label_sizegrip_diary = QLabel(self.horizontalFrame_diary)
        self.label_sizegrip_diary.setObjectName(u"label_sizegrip_diary")
        sizePolicy6 = QSizePolicy(QSizePolicy.MinimumExpanding, QSizePolicy.Preferred)
        sizePolicy6.setHorizontalStretch(0)
        sizePolicy6.setVerticalStretch(0)
        sizePolicy6.setHeightForWidth(self.label_sizegrip_diary.sizePolicy().hasHeightForWidth())
        self.label_sizegrip_diary.setSizePolicy(sizePolicy6)

        self.horizontalLayout_sizegrip_concept_2.addWidget(self.label_sizegrip_diary)

        self.frame_sizegrip_diary = QFrame(self.horizontalFrame_diary)
        self.frame_sizegrip_diary.setObjectName(u"frame_sizegrip_diary")
        self.frame_sizegrip_diary.setMinimumSize(QSize(16, 16))
        self.frame_sizegrip_diary.setFrameShape(QFrame.NoFrame)

        self.horizontalLayout_sizegrip_concept_2.addWidget(self.frame_sizegrip_diary)


        self.verticalLayout_3.addWidget(self.horizontalFrame_diary)


        self.verticalLayout_13.addLayout(self.verticalLayout_3)

        self.dockWidget_diary.setWidget(self.dockWidgetContents_6)
        dongli_teahouse_studio_window.addDockWidget(Qt.RightDockWidgetArea, self.dockWidget_diary)
        self.dockWidget_library = QDockWidget(dongli_teahouse_studio_window)
        self.dockWidget_library.setObjectName(u"dockWidget_library")
        self.dockWidget_library.setFloating(False)
        self.dockWidget_library.setAllowedAreas(Qt.AllDockWidgetAreas)
        self.dockWidgetContents = QWidget()
        self.dockWidgetContents.setObjectName(u"dockWidgetContents")
        self.verticalLayout_14 = QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_14.setSpacing(0)
        self.verticalLayout_14.setObjectName(u"verticalLayout_14")
        self.verticalLayout_14.setContentsMargins(8, 8, 5, 5)
        self.verticalLayout_6 = QVBoxLayout()
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName(u"verticalLayout_6")
        self.verticalWidget_titlebar_library = QWidget(self.dockWidgetContents)
        self.verticalWidget_titlebar_library.setObjectName(u"verticalWidget_titlebar_library")
        sizePolicy3.setHeightForWidth(self.verticalWidget_titlebar_library.sizePolicy().hasHeightForWidth())
        self.verticalWidget_titlebar_library.setSizePolicy(sizePolicy3)
        self.verticalLayout_17 = QVBoxLayout(self.verticalWidget_titlebar_library)
        self.verticalLayout_17.setSpacing(0)
        self.verticalLayout_17.setObjectName(u"verticalLayout_17")
        self.verticalLayout_17.setContentsMargins(8, 8, 5, 0)
        self.horizontalWidget_titlebar_library = QWidget(self.verticalWidget_titlebar_library)
        self.horizontalWidget_titlebar_library.setObjectName(u"horizontalWidget_titlebar_library")
        self.horizontalLayout_titlebar_concept_3 = QHBoxLayout(self.horizontalWidget_titlebar_library)
        self.horizontalLayout_titlebar_concept_3.setSpacing(4)
        self.horizontalLayout_titlebar_concept_3.setObjectName(u"horizontalLayout_titlebar_concept_3")
        self.horizontalLayout_titlebar_concept_3.setContentsMargins(0, 0, 0, 0)
        self.label_library_icon = MyDockTitleLabel(self.horizontalWidget_titlebar_library)
        self.label_library_icon.setObjectName(u"label_library_icon")
        sizePolicy1.setHeightForWidth(self.label_library_icon.sizePolicy().hasHeightForWidth())
        self.label_library_icon.setSizePolicy(sizePolicy1)
        self.label_library_icon.setMaximumSize(QSize(16, 16))
        self.label_library_icon.setPixmap(QPixmap(u":/icon/hard-drive.svg"))
        self.label_library_icon.setScaledContents(True)

        self.horizontalLayout_titlebar_concept_3.addWidget(self.label_library_icon)

        self.label_titlebar_library = QLabel(self.horizontalWidget_titlebar_library)
        self.label_titlebar_library.setObjectName(u"label_titlebar_library")

        self.horizontalLayout_titlebar_concept_3.addWidget(self.label_titlebar_library)

        self.pushButton_library_close = QPushButton(self.horizontalWidget_titlebar_library)
        self.pushButton_library_close.setObjectName(u"pushButton_library_close")
        sizePolicy5.setHeightForWidth(self.pushButton_library_close.sizePolicy().hasHeightForWidth())
        self.pushButton_library_close.setSizePolicy(sizePolicy5)
        self.pushButton_library_close.setMinimumSize(QSize(16, 16))
        self.pushButton_library_close.setMaximumSize(QSize(16, 16))
        self.pushButton_library_close.setStyleSheet(u"")
        self.pushButton_library_close.setIcon(icon45)
        self.pushButton_library_close.setIconSize(QSize(16, 16))
        self.pushButton_library_close.setFlat(False)

        self.horizontalLayout_titlebar_concept_3.addWidget(self.pushButton_library_close)


        self.verticalLayout_17.addWidget(self.horizontalWidget_titlebar_library)


        self.verticalLayout_6.addWidget(self.verticalWidget_titlebar_library)

        self.verticalLayout_5 = QVBoxLayout()
        self.verticalLayout_5.setSpacing(6)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.lineEdit_search_file = QLineEdit(self.dockWidgetContents)
        self.lineEdit_search_file.setObjectName(u"lineEdit_search_file")
        sizePolicy.setHeightForWidth(self.lineEdit_search_file.sizePolicy().hasHeightForWidth())
        self.lineEdit_search_file.setSizePolicy(sizePolicy)
        self.lineEdit_search_file.setMinimumSize(QSize(270, 0))

        self.verticalLayout_5.addWidget(self.lineEdit_search_file)

        self.splitter_file_manager = QSplitter(self.dockWidgetContents)
        self.splitter_file_manager.setObjectName(u"splitter_file_manager")
        sizePolicy7 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.MinimumExpanding)
        sizePolicy7.setHorizontalStretch(0)
        sizePolicy7.setVerticalStretch(0)
        sizePolicy7.setHeightForWidth(self.splitter_file_manager.sizePolicy().hasHeightForWidth())
        self.splitter_file_manager.setSizePolicy(sizePolicy7)
        self.splitter_file_manager.setOrientation(Qt.Horizontal)
        self.splitter_file_manager.setHandleWidth(10)
        self.splitter_file_manager.setChildrenCollapsible(False)
        self.listWidget_search_file = MyConceptLinkedFileList(self.splitter_file_manager)
        self.listWidget_search_file.setObjectName(u"listWidget_search_file")
        sizePolicy3.setHeightForWidth(self.listWidget_search_file.sizePolicy().hasHeightForWidth())
        self.listWidget_search_file.setSizePolicy(sizePolicy3)
        self.listWidget_search_file.setDragEnabled(True)
        self.listWidget_search_file.setDragDropOverwriteMode(False)
        self.listWidget_search_file.setDragDropMode(QAbstractItemView.InternalMove)
        self.listWidget_search_file.setDefaultDropAction(Qt.CopyAction)
        self.listWidget_search_file.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget_search_file.setIconSize(QSize(23, 23))
        self.listWidget_search_file.setGridSize(QSize(23, 27))
        self.listWidget_search_file.setSelectionRectVisible(True)
        self.splitter_file_manager.addWidget(self.listWidget_search_file)
        self.layoutWidget2 = QWidget(self.splitter_file_manager)
        self.layoutWidget2.setObjectName(u"layoutWidget2")
        self.verticalLayout_7 = QVBoxLayout(self.layoutWidget2)
        self.verticalLayout_7.setObjectName(u"verticalLayout_7")
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.lineEdit_date = QLineEdit(self.layoutWidget2)
        self.lineEdit_date.setObjectName(u"lineEdit_date")
        self.lineEdit_date.setEnabled(True)
        sizePolicy.setHeightForWidth(self.lineEdit_date.sizePolicy().hasHeightForWidth())
        self.lineEdit_date.setSizePolicy(sizePolicy)
        self.lineEdit_date.setMinimumSize(QSize(0, 0))
        self.lineEdit_date.setReadOnly(True)

        self.verticalLayout_7.addWidget(self.lineEdit_date)

        self.listWidget_file_related_concept = QListWidget(self.layoutWidget2)
        self.listWidget_file_related_concept.setObjectName(u"listWidget_file_related_concept")
        sizePolicy3.setHeightForWidth(self.listWidget_file_related_concept.sizePolicy().hasHeightForWidth())
        self.listWidget_file_related_concept.setSizePolicy(sizePolicy3)
        self.listWidget_file_related_concept.setDragEnabled(False)
        self.listWidget_file_related_concept.setDragDropOverwriteMode(False)
        self.listWidget_file_related_concept.setDragDropMode(QAbstractItemView.NoDragDrop)
        self.listWidget_file_related_concept.setDefaultDropAction(Qt.IgnoreAction)
        self.listWidget_file_related_concept.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget_file_related_concept.setMovement(QListView.Static)
        self.listWidget_file_related_concept.setFlow(QListView.LeftToRight)
        self.listWidget_file_related_concept.setResizeMode(QListView.Adjust)
        self.listWidget_file_related_concept.setSpacing(5)
        self.listWidget_file_related_concept.setViewMode(QListView.IconMode)
        self.listWidget_file_related_concept.setWordWrap(False)
        self.listWidget_file_related_concept.setSelectionRectVisible(True)

        self.verticalLayout_7.addWidget(self.listWidget_file_related_concept)

        self.splitter_file_manager.addWidget(self.layoutWidget2)

        self.verticalLayout_5.addWidget(self.splitter_file_manager)


        self.verticalLayout_6.addLayout(self.verticalLayout_5)

        self.horizontalFrame_library = QFrame(self.dockWidgetContents)
        self.horizontalFrame_library.setObjectName(u"horizontalFrame_library")
        self.horizontalLayout_sizegrip_concept_3 = QHBoxLayout(self.horizontalFrame_library)
        self.horizontalLayout_sizegrip_concept_3.setSpacing(0)
        self.horizontalLayout_sizegrip_concept_3.setObjectName(u"horizontalLayout_sizegrip_concept_3")
        self.horizontalLayout_sizegrip_concept_3.setContentsMargins(0, 0, 0, 0)
        self.label_sizegrip_library = QLabel(self.horizontalFrame_library)
        self.label_sizegrip_library.setObjectName(u"label_sizegrip_library")
        sizePolicy6.setHeightForWidth(self.label_sizegrip_library.sizePolicy().hasHeightForWidth())
        self.label_sizegrip_library.setSizePolicy(sizePolicy6)

        self.horizontalLayout_sizegrip_concept_3.addWidget(self.label_sizegrip_library)

        self.frame_sizegrip_library = QFrame(self.horizontalFrame_library)
        self.frame_sizegrip_library.setObjectName(u"frame_sizegrip_library")
        self.frame_sizegrip_library.setMinimumSize(QSize(16, 16))
        self.frame_sizegrip_library.setFrameShape(QFrame.NoFrame)

        self.horizontalLayout_sizegrip_concept_3.addWidget(self.frame_sizegrip_library)


        self.verticalLayout_6.addWidget(self.horizontalFrame_library)


        self.verticalLayout_14.addLayout(self.verticalLayout_6)

        self.dockWidget_library.setWidget(self.dockWidgetContents)
        dongli_teahouse_studio_window.addDockWidget(Qt.LeftDockWidgetArea, self.dockWidget_library)
        self.menubar = QMenuBar(dongli_teahouse_studio_window)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1442, 22))
        self.menubar.setLayoutDirection(Qt.LeftToRight)
        self.menuView = QMenu(self.menubar)
        self.menuView.setObjectName(u"menuView")
        icon48 = QIcon()
        icon48.addFile(u":/icon/eye.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.menuView.setIcon(icon48)
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        icon49 = QIcon()
        icon49.addFile(u":/icon/codesandbox.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.menuFile.setIcon(icon49)
        self.menuExport = QMenu(self.menuFile)
        self.menuExport.setObjectName(u"menuExport")
        self.menuExport.setIcon(icon18)
        self.menuTool = QMenu(self.menubar)
        self.menuTool.setObjectName(u"menuTool")
        icon50 = QIcon()
        icon50.addFile(u":/icon/scissors.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.menuTool.setIcon(icon50)
        self.menuDiary = QMenu(self.menuTool)
        self.menuDiary.setObjectName(u"menuDiary")
        self.menuDiary.setIcon(icon39)
        self.menuConcept = QMenu(self.menuTool)
        self.menuConcept.setObjectName(u"menuConcept")
        icon51 = QIcon()
        icon51.addFile(u":/icon/hash.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.menuConcept.setIcon(icon51)
        self.menuLibrary = QMenu(self.menuTool)
        self.menuLibrary.setObjectName(u"menuLibrary")
        icon52 = QIcon()
        icon52.addFile(u":/icon/inbox.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.menuLibrary.setIcon(icon52)
        self.menuRSS = QMenu(self.menuTool)
        self.menuRSS.setObjectName(u"menuRSS")
        self.menuRSS.setIcon(icon16)
        self.menuZen = QMenu(self.menuTool)
        self.menuZen.setObjectName(u"menuZen")
        self.menuZen.setIcon(icon40)
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        icon53 = QIcon()
        icon53.addFile(u":/icon/help-circle.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.menuHelp.setIcon(icon53)
        self.menuTab = QMenu(self.menubar)
        self.menuTab.setObjectName(u"menuTab")
        self.menuTab.setIcon(icon41)
        self.menuOther = QMenu(self.menubar)
        self.menuOther.setObjectName(u"menuOther")
        dongli_teahouse_studio_window.setMenuBar(self.menubar)
        self.dockWidget_sticker = QDockWidget(dongli_teahouse_studio_window)
        self.dockWidget_sticker.setObjectName(u"dockWidget_sticker")
        self.dockWidget_sticker.setFloating(False)
        self.dockWidgetContents_2 = QWidget()
        self.dockWidgetContents_2.setObjectName(u"dockWidgetContents_2")
        self.verticalLayout_12 = QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_12.setSpacing(0)
        self.verticalLayout_12.setObjectName(u"verticalLayout_12")
        self.verticalLayout_12.setContentsMargins(8, 8, 5, 5)
        self.verticalWidget_titlebar_sticker = QWidget(self.dockWidgetContents_2)
        self.verticalWidget_titlebar_sticker.setObjectName(u"verticalWidget_titlebar_sticker")
        self.verticalLayout_18 = QVBoxLayout(self.verticalWidget_titlebar_sticker)
        self.verticalLayout_18.setSpacing(0)
        self.verticalLayout_18.setObjectName(u"verticalLayout_18")
        self.verticalLayout_18.setContentsMargins(8, 8, 5, 0)
        self.horizontalWidget_titlebar_sticker = QWidget(self.verticalWidget_titlebar_sticker)
        self.horizontalWidget_titlebar_sticker.setObjectName(u"horizontalWidget_titlebar_sticker")
        self.horizontalLayout_titlebar_concept_4 = QHBoxLayout(self.horizontalWidget_titlebar_sticker)
        self.horizontalLayout_titlebar_concept_4.setSpacing(4)
        self.horizontalLayout_titlebar_concept_4.setObjectName(u"horizontalLayout_titlebar_concept_4")
        self.horizontalLayout_titlebar_concept_4.setContentsMargins(0, 0, 0, 0)
        self.label_sticker_icon = MyDockTitleLabel(self.horizontalWidget_titlebar_sticker)
        self.label_sticker_icon.setObjectName(u"label_sticker_icon")
        sizePolicy1.setHeightForWidth(self.label_sticker_icon.sizePolicy().hasHeightForWidth())
        self.label_sticker_icon.setSizePolicy(sizePolicy1)
        self.label_sticker_icon.setMaximumSize(QSize(16, 16))
        self.label_sticker_icon.setPixmap(QPixmap(u":/icon/coffee.svg"))
        self.label_sticker_icon.setScaledContents(True)

        self.horizontalLayout_titlebar_concept_4.addWidget(self.label_sticker_icon)

        self.label_titlebar_sticker = QLabel(self.horizontalWidget_titlebar_sticker)
        self.label_titlebar_sticker.setObjectName(u"label_titlebar_sticker")

        self.horizontalLayout_titlebar_concept_4.addWidget(self.label_titlebar_sticker)

        self.pushButton_sticker_close = QPushButton(self.horizontalWidget_titlebar_sticker)
        self.pushButton_sticker_close.setObjectName(u"pushButton_sticker_close")
        sizePolicy5.setHeightForWidth(self.pushButton_sticker_close.sizePolicy().hasHeightForWidth())
        self.pushButton_sticker_close.setSizePolicy(sizePolicy5)
        self.pushButton_sticker_close.setMinimumSize(QSize(16, 16))
        self.pushButton_sticker_close.setMaximumSize(QSize(16, 16))
        self.pushButton_sticker_close.setStyleSheet(u"")
        self.pushButton_sticker_close.setIcon(icon45)
        self.pushButton_sticker_close.setIconSize(QSize(16, 16))
        self.pushButton_sticker_close.setFlat(False)

        self.horizontalLayout_titlebar_concept_4.addWidget(self.pushButton_sticker_close)


        self.verticalLayout_18.addWidget(self.horizontalWidget_titlebar_sticker)


        self.verticalLayout_12.addWidget(self.verticalWidget_titlebar_sticker)

        self.plainTextEdit_sticker = QPlainTextEdit(self.dockWidgetContents_2)
        self.plainTextEdit_sticker.setObjectName(u"plainTextEdit_sticker")

        self.verticalLayout_12.addWidget(self.plainTextEdit_sticker)

        self.horizontalFrame_sticker = QFrame(self.dockWidgetContents_2)
        self.horizontalFrame_sticker.setObjectName(u"horizontalFrame_sticker")
        self.horizontalLayout_sizegrip_concept_4 = QHBoxLayout(self.horizontalFrame_sticker)
        self.horizontalLayout_sizegrip_concept_4.setSpacing(0)
        self.horizontalLayout_sizegrip_concept_4.setObjectName(u"horizontalLayout_sizegrip_concept_4")
        self.horizontalLayout_sizegrip_concept_4.setContentsMargins(0, 0, 0, 0)
        self.label_sizegrip_sticker = QLabel(self.horizontalFrame_sticker)
        self.label_sizegrip_sticker.setObjectName(u"label_sizegrip_sticker")
        sizePolicy6.setHeightForWidth(self.label_sizegrip_sticker.sizePolicy().hasHeightForWidth())
        self.label_sizegrip_sticker.setSizePolicy(sizePolicy6)

        self.horizontalLayout_sizegrip_concept_4.addWidget(self.label_sizegrip_sticker)

        self.frame_sizegrip_sticker = QFrame(self.horizontalFrame_sticker)
        self.frame_sizegrip_sticker.setObjectName(u"frame_sizegrip_sticker")
        self.frame_sizegrip_sticker.setMinimumSize(QSize(16, 16))
        self.frame_sizegrip_sticker.setFrameShape(QFrame.NoFrame)

        self.horizontalLayout_sizegrip_concept_4.addWidget(self.frame_sizegrip_sticker)


        self.verticalLayout_12.addWidget(self.horizontalFrame_sticker)

        self.dockWidget_sticker.setWidget(self.dockWidgetContents_2)
        dongli_teahouse_studio_window.addDockWidget(Qt.RightDockWidgetArea, self.dockWidget_sticker)
        self.statusBar = QStatusBar(dongli_teahouse_studio_window)
        self.statusBar.setObjectName(u"statusBar")
        font3 = QFont()
        font3.setFamily(u"Segoe UI")
        font3.setBold(True)
        font3.setWeight(75)
        self.statusBar.setFont(font3)
        dongli_teahouse_studio_window.setStatusBar(self.statusBar)
        self.dockWidget_concept = QDockWidget(dongli_teahouse_studio_window)
        self.dockWidget_concept.setObjectName(u"dockWidget_concept")
        self.dockWidgetContents_3 = QWidget()
        self.dockWidgetContents_3.setObjectName(u"dockWidgetContents_3")
        self.verticalLayout_21 = QVBoxLayout(self.dockWidgetContents_3)
        self.verticalLayout_21.setObjectName(u"verticalLayout_21")
        self.verticalWidget_titlebar_concept = QWidget(self.dockWidgetContents_3)
        self.verticalWidget_titlebar_concept.setObjectName(u"verticalWidget_titlebar_concept")
        self.verticalLayout_19 = QVBoxLayout(self.verticalWidget_titlebar_concept)
        self.verticalLayout_19.setSpacing(0)
        self.verticalLayout_19.setObjectName(u"verticalLayout_19")
        self.verticalLayout_19.setContentsMargins(8, 8, 5, 0)
        self.horizontalWidget_titlebar_concept = QWidget(self.verticalWidget_titlebar_concept)
        self.horizontalWidget_titlebar_concept.setObjectName(u"horizontalWidget_titlebar_concept")
        self.horizontalLayout_titlebar_concept_5 = QHBoxLayout(self.horizontalWidget_titlebar_concept)
        self.horizontalLayout_titlebar_concept_5.setSpacing(4)
        self.horizontalLayout_titlebar_concept_5.setObjectName(u"horizontalLayout_titlebar_concept_5")
        self.horizontalLayout_titlebar_concept_5.setContentsMargins(0, 0, 0, 0)
        self.label_concept_icon = MyDockTitleLabel(self.horizontalWidget_titlebar_concept)
        self.label_concept_icon.setObjectName(u"label_concept_icon")
        sizePolicy1.setHeightForWidth(self.label_concept_icon.sizePolicy().hasHeightForWidth())
        self.label_concept_icon.setSizePolicy(sizePolicy1)
        self.label_concept_icon.setMaximumSize(QSize(16, 16))
        self.label_concept_icon.setPixmap(QPixmap(u":/icon/hash.svg"))
        self.label_concept_icon.setScaledContents(True)

        self.horizontalLayout_titlebar_concept_5.addWidget(self.label_concept_icon)

        self.label_titlebar_concept = QLabel(self.horizontalWidget_titlebar_concept)
        self.label_titlebar_concept.setObjectName(u"label_titlebar_concept")

        self.horizontalLayout_titlebar_concept_5.addWidget(self.label_titlebar_concept)

        self.pushButton_concept_close = QPushButton(self.horizontalWidget_titlebar_concept)
        self.pushButton_concept_close.setObjectName(u"pushButton_concept_close")
        sizePolicy5.setHeightForWidth(self.pushButton_concept_close.sizePolicy().hasHeightForWidth())
        self.pushButton_concept_close.setSizePolicy(sizePolicy5)
        self.pushButton_concept_close.setMinimumSize(QSize(16, 16))
        self.pushButton_concept_close.setMaximumSize(QSize(16, 16))
        self.pushButton_concept_close.setStyleSheet(u"")
        self.pushButton_concept_close.setIcon(icon45)
        self.pushButton_concept_close.setIconSize(QSize(16, 16))
        self.pushButton_concept_close.setFlat(False)

        self.horizontalLayout_titlebar_concept_5.addWidget(self.pushButton_concept_close)


        self.verticalLayout_19.addWidget(self.horizontalWidget_titlebar_concept)


        self.verticalLayout_21.addWidget(self.verticalWidget_titlebar_concept)

        self.splitter_concept = QSplitter(self.dockWidgetContents_3)
        self.splitter_concept.setObjectName(u"splitter_concept")
        self.splitter_concept.setOrientation(Qt.Vertical)
        self.splitter_concept.setHandleWidth(10)
        self.layoutWidget3_2 = QWidget(self.splitter_concept)
        self.layoutWidget3_2.setObjectName(u"layoutWidget3_2")
        self.verticalLayout_20 = QVBoxLayout(self.layoutWidget3_2)
        self.verticalLayout_20.setObjectName(u"verticalLayout_20")
        self.verticalLayout_20.setContentsMargins(0, 0, 0, 0)
        self.lineEdit_search_concept = QLineEdit(self.layoutWidget3_2)
        self.lineEdit_search_concept.setObjectName(u"lineEdit_search_concept")
        self.lineEdit_search_concept.setMinimumSize(QSize(270, 0))

        self.verticalLayout_20.addWidget(self.lineEdit_search_concept)

        self.listWidget_search_concept = MyConceptList(self.layoutWidget3_2)
        self.listWidget_search_concept.setObjectName(u"listWidget_search_concept")
        self.listWidget_search_concept.setMinimumSize(QSize(270, 0))
        self.listWidget_search_concept.setDragEnabled(True)
        self.listWidget_search_concept.setDragDropOverwriteMode(False)
        self.listWidget_search_concept.setDragDropMode(QAbstractItemView.InternalMove)
        self.listWidget_search_concept.setDefaultDropAction(Qt.MoveAction)
        self.listWidget_search_concept.setSpacing(5)

        self.verticalLayout_20.addWidget(self.listWidget_search_concept)

        self.splitter_concept.addWidget(self.layoutWidget3_2)
        self.layoutWidget_3 = QWidget(self.splitter_concept)
        self.layoutWidget_3.setObjectName(u"layoutWidget_3")
        self.formLayout = QFormLayout(self.layoutWidget_3)
        self.formLayout.setObjectName(u"formLayout")
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.label_id = QLabel(self.layoutWidget_3)
        self.label_id.setObjectName(u"label_id")

        self.formLayout.setWidget(0, QFormLayout.LabelRole, self.label_id)

        self.lineEdit_id = QLineEdit(self.layoutWidget_3)
        self.lineEdit_id.setObjectName(u"lineEdit_id")
        self.lineEdit_id.setEnabled(True)
        self.lineEdit_id.setMinimumSize(QSize(0, 0))
        self.lineEdit_id.setReadOnly(True)

        self.formLayout.setWidget(0, QFormLayout.FieldRole, self.lineEdit_id)

        self.label_name = QLabel(self.layoutWidget_3)
        self.label_name.setObjectName(u"label_name")
        sizePolicy3.setHeightForWidth(self.label_name.sizePolicy().hasHeightForWidth())
        self.label_name.setSizePolicy(sizePolicy3)

        self.formLayout.setWidget(1, QFormLayout.LabelRole, self.label_name)

        self.lineEdit_name = QLineEdit(self.layoutWidget_3)
        self.lineEdit_name.setObjectName(u"lineEdit_name")
        self.lineEdit_name.setMinimumSize(QSize(0, 0))
        self.lineEdit_name.setDragEnabled(False)
        self.lineEdit_name.setReadOnly(False)
        self.lineEdit_name.setClearButtonEnabled(False)

        self.formLayout.setWidget(1, QFormLayout.FieldRole, self.lineEdit_name)

        self.label_detail = QLabel(self.layoutWidget_3)
        self.label_detail.setObjectName(u"label_detail")
        sizePolicy3.setHeightForWidth(self.label_detail.sizePolicy().hasHeightForWidth())
        self.label_detail.setSizePolicy(sizePolicy3)

        self.formLayout.setWidget(2, QFormLayout.LabelRole, self.label_detail)

        self.plainTextEdit_detail = MyPlainTextEdit(self.layoutWidget_3)
        self.plainTextEdit_detail.setObjectName(u"plainTextEdit_detail")
        self.plainTextEdit_detail.setEnabled(True)
        self.plainTextEdit_detail.setMinimumSize(QSize(0, 0))
        self.plainTextEdit_detail.setMaximumSize(QSize(16777215, 16777215))
        self.plainTextEdit_detail.setReadOnly(False)

        self.formLayout.setWidget(2, QFormLayout.FieldRole, self.plainTextEdit_detail)

        self.label_parent = QLabel(self.layoutWidget_3)
        self.label_parent.setObjectName(u"label_parent")

        self.formLayout.setWidget(3, QFormLayout.LabelRole, self.label_parent)

        self.listWidget_parent = QListWidget(self.layoutWidget_3)
        self.listWidget_parent.setObjectName(u"listWidget_parent")
        sizePolicy8 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy8.setHorizontalStretch(0)
        sizePolicy8.setVerticalStretch(0)
        sizePolicy8.setHeightForWidth(self.listWidget_parent.sizePolicy().hasHeightForWidth())
        self.listWidget_parent.setSizePolicy(sizePolicy8)
        self.listWidget_parent.setMinimumSize(QSize(0, 0))
        self.listWidget_parent.setMaximumSize(QSize(16777215, 120))
        self.listWidget_parent.setProperty("showDropIndicator", False)
        self.listWidget_parent.setDragDropMode(QAbstractItemView.NoDragDrop)
        self.listWidget_parent.setDefaultDropAction(Qt.IgnoreAction)
        self.listWidget_parent.setMovement(QListView.Static)
        self.listWidget_parent.setFlow(QListView.LeftToRight)
        self.listWidget_parent.setResizeMode(QListView.Adjust)
        self.listWidget_parent.setSpacing(5)
        self.listWidget_parent.setViewMode(QListView.IconMode)
        self.listWidget_parent.setSelectionRectVisible(False)

        self.formLayout.setWidget(3, QFormLayout.FieldRole, self.listWidget_parent)

        self.label_child = QLabel(self.layoutWidget_3)
        self.label_child.setObjectName(u"label_child")

        self.formLayout.setWidget(4, QFormLayout.LabelRole, self.label_child)

        self.listWidget_child = QListWidget(self.layoutWidget_3)
        self.listWidget_child.setObjectName(u"listWidget_child")
        self.listWidget_child.setMinimumSize(QSize(0, 0))
        self.listWidget_child.setMaximumSize(QSize(16777215, 120))
        self.listWidget_child.setProperty("showDropIndicator", False)
        self.listWidget_child.setDragDropMode(QAbstractItemView.NoDragDrop)
        self.listWidget_child.setDefaultDropAction(Qt.IgnoreAction)
        self.listWidget_child.setMovement(QListView.Static)
        self.listWidget_child.setResizeMode(QListView.Adjust)
        self.listWidget_child.setSpacing(5)
        self.listWidget_child.setViewMode(QListView.IconMode)
        self.listWidget_child.setSelectionRectVisible(False)

        self.formLayout.setWidget(4, QFormLayout.FieldRole, self.listWidget_child)

        self.label_relative = QLabel(self.layoutWidget_3)
        self.label_relative.setObjectName(u"label_relative")

        self.formLayout.setWidget(5, QFormLayout.LabelRole, self.label_relative)

        self.listWidget_relative = QListWidget(self.layoutWidget_3)
        self.listWidget_relative.setObjectName(u"listWidget_relative")
        self.listWidget_relative.setMinimumSize(QSize(0, 0))
        self.listWidget_relative.setMaximumSize(QSize(16777215, 120))
        self.listWidget_relative.setProperty("showDropIndicator", False)
        self.listWidget_relative.setDragDropMode(QAbstractItemView.NoDragDrop)
        self.listWidget_relative.setDefaultDropAction(Qt.IgnoreAction)
        self.listWidget_relative.setSelectionMode(QAbstractItemView.SingleSelection)
        self.listWidget_relative.setMovement(QListView.Static)
        self.listWidget_relative.setFlow(QListView.LeftToRight)
        self.listWidget_relative.setResizeMode(QListView.Adjust)
        self.listWidget_relative.setLayoutMode(QListView.SinglePass)
        self.listWidget_relative.setSpacing(5)
        self.listWidget_relative.setViewMode(QListView.IconMode)
        self.listWidget_relative.setWordWrap(False)
        self.listWidget_relative.setSelectionRectVisible(False)

        self.formLayout.setWidget(5, QFormLayout.FieldRole, self.listWidget_relative)

        self.splitter_concept.addWidget(self.layoutWidget_3)
        self.toolBox_concept = QToolBox(self.splitter_concept)
        self.toolBox_concept.setObjectName(u"toolBox_concept")
        self.page_concept_related_text = QWidget()
        self.page_concept_related_text.setObjectName(u"page_concept_related_text")
        self.page_concept_related_text.setGeometry(QRect(0, 0, 272, 83))
        self.horizontalLayout_12 = QHBoxLayout(self.page_concept_related_text)
        self.horizontalLayout_12.setSpacing(0)
        self.horizontalLayout_12.setObjectName(u"horizontalLayout_12")
        self.horizontalLayout_12.setContentsMargins(5, 5, 5, 5)
        self.listWidget_concept_related_text = QListWidget(self.page_concept_related_text)
        self.listWidget_concept_related_text.setObjectName(u"listWidget_concept_related_text")
        self.listWidget_concept_related_text.setMinimumSize(QSize(220, 0))
        self.listWidget_concept_related_text.setStyleSheet(u"QListWidget::item {\n"
"    background-color:rgb(51, 51, 51);\n"
"}\n"
"\n"
"QListWidget::item:selected {\n"
"    border-radius:5px;\n"
"    background-color:rgb(73, 73, 73);\n"
"}")
        self.listWidget_concept_related_text.setDragDropMode(QAbstractItemView.InternalMove)
        self.listWidget_concept_related_text.setDefaultDropAction(Qt.MoveAction)
        self.listWidget_concept_related_text.setSpacing(10)
        self.listWidget_concept_related_text.setWordWrap(True)

        self.horizontalLayout_12.addWidget(self.listWidget_concept_related_text)

        icon54 = QIcon()
        icon54.addFile(u":/icon/file-text.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.toolBox_concept.addItem(self.page_concept_related_text, icon54, u"Concept Related Text")
        self.page_concept_linked_file = QWidget()
        self.page_concept_linked_file.setObjectName(u"page_concept_linked_file")
        self.page_concept_linked_file.setGeometry(QRect(0, 0, 272, 83))
        self.horizontalLayout_13 = QHBoxLayout(self.page_concept_linked_file)
        self.horizontalLayout_13.setSpacing(0)
        self.horizontalLayout_13.setObjectName(u"horizontalLayout_13")
        self.horizontalLayout_13.setContentsMargins(5, 5, 5, 5)
        self.listWidget_concept_linked_file = MyConceptLinkedFileList(self.page_concept_linked_file)
        self.listWidget_concept_linked_file.setObjectName(u"listWidget_concept_linked_file")
        self.listWidget_concept_linked_file.setDragEnabled(True)
        self.listWidget_concept_linked_file.setDragDropMode(QAbstractItemView.InternalMove)
        self.listWidget_concept_linked_file.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget_concept_linked_file.setIconSize(QSize(48, 48))
        self.listWidget_concept_linked_file.setResizeMode(QListView.Adjust)
        self.listWidget_concept_linked_file.setSpacing(16)
        self.listWidget_concept_linked_file.setGridSize(QSize(96, 128))
        self.listWidget_concept_linked_file.setViewMode(QListView.IconMode)
        self.listWidget_concept_linked_file.setWordWrap(True)

        self.horizontalLayout_13.addWidget(self.listWidget_concept_linked_file)

        self.toolBox_concept.addItem(self.page_concept_linked_file, icon47, u"Concept Linked File")
        self.splitter_concept.addWidget(self.toolBox_concept)

        self.verticalLayout_21.addWidget(self.splitter_concept)

        self.horizontalFrame_concept = QFrame(self.dockWidgetContents_3)
        self.horizontalFrame_concept.setObjectName(u"horizontalFrame_concept")
        self.horizontalLayout_sizegrip_concept_5 = QHBoxLayout(self.horizontalFrame_concept)
        self.horizontalLayout_sizegrip_concept_5.setSpacing(0)
        self.horizontalLayout_sizegrip_concept_5.setObjectName(u"horizontalLayout_sizegrip_concept_5")
        self.horizontalLayout_sizegrip_concept_5.setContentsMargins(0, 0, 0, 0)
        self.label_sizegrip_concept = QLabel(self.horizontalFrame_concept)
        self.label_sizegrip_concept.setObjectName(u"label_sizegrip_concept")
        sizePolicy6.setHeightForWidth(self.label_sizegrip_concept.sizePolicy().hasHeightForWidth())
        self.label_sizegrip_concept.setSizePolicy(sizePolicy6)

        self.horizontalLayout_sizegrip_concept_5.addWidget(self.label_sizegrip_concept)

        self.frame_sizegrip_concept = QFrame(self.horizontalFrame_concept)
        self.frame_sizegrip_concept.setObjectName(u"frame_sizegrip_concept")
        self.frame_sizegrip_concept.setMinimumSize(QSize(16, 16))
        self.frame_sizegrip_concept.setFrameShape(QFrame.NoFrame)

        self.horizontalLayout_sizegrip_concept_5.addWidget(self.frame_sizegrip_concept)


        self.verticalLayout_21.addWidget(self.horizontalFrame_concept)

        self.dockWidget_concept.setWidget(self.dockWidgetContents_3)
        dongli_teahouse_studio_window.addDockWidget(Qt.LeftDockWidgetArea, self.dockWidget_concept)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuTool.menuAction())
        self.menubar.addAction(self.menuTab.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menubar.addAction(self.menuOther.menuAction())
        self.menuView.addAction(self.actionToggle_Fullscreen)
        self.menuView.addAction(self.actionHide_Main_Window)
        self.menuView.addAction(self.actionRestore_Main_Window)
        self.menuView.addAction(self.actionRestore_to_Normal_Size)
        self.menuView.addAction(self.actionStay_on_Top)
        self.menuView.addAction(self.actionBoss_Coming)
        self.menuView.addSeparator()
        self.menuFile.addAction(self.actionSave_Data)
        self.menuFile.addAction(self.actionBackup_Data)
        self.menuFile.addAction(self.actionData_Security_Check)
        self.menuFile.addAction(self.menuExport.menuAction())
        self.menuExport.addAction(self.actionExport_Concept_Data_to_Json)
        self.menuExport.addAction(self.actionExport_Diary_Data_to_Json)
        self.menuExport.addAction(self.actionExport_File_Data_to_Json)
        self.menuExport.addAction(self.actionExport_RSS_Data_to_Json)
        self.menuExport.addAction(self.actionExport_RSS_Tree_Data_to_Json)
        self.menuExport.addAction(self.actionExport_Zen_Data_to_Json)
        self.menuExport.addAction(self.actionExport_Zen_Tree_Data_to_Json)
        self.menuTool.addAction(self.menuConcept.menuAction())
        self.menuTool.addAction(self.menuDiary.menuAction())
        self.menuTool.addAction(self.menuLibrary.menuAction())
        self.menuTool.addAction(self.menuRSS.menuAction())
        self.menuTool.addAction(self.menuZen.menuAction())
        self.menuTool.addAction(self.actionEdit)
        self.menuTool.addAction(self.actionLocate)
        self.menuTool.addAction(self.actionDelete)
        self.menuDiary.addAction(self.actionSearch_Diary_Text)
        self.menuDiary.addAction(self.actionAdd_New_Line)
        self.menuDiary.addAction(self.actionLink_Concept_to_Line)
        self.menuDiary.addAction(self.actionAnalyze_Diary_with_Concept)
        self.menuDiary.addAction(self.actionI_m_Feeling_Lucky)
        self.menuConcept.addAction(self.actionSearch_Concept)
        self.menuConcept.addAction(self.actionCreate_Concept)
        self.menuConcept.addSeparator()
        self.menuConcept.addAction(self.actionAdd_Concept_To_Parent)
        self.menuConcept.addAction(self.actionAdd_Concept_To_Child)
        self.menuConcept.addAction(self.actionAdd_Concept_To_Relative)
        self.menuConcept.addSeparator()
        self.menuLibrary.addAction(self.actionSearch_File_Library)
        self.menuLibrary.addAction(self.actionFile_Check)
        self.menuRSS.addAction(self.actionCreate_RSS_Folder)
        self.menuRSS.addAction(self.actionAdd_RSS_Feed)
        self.menuRSS.addAction(self.actionOpen_WebPage_In_Browser)
        self.menuRSS.addAction(self.actionUpdate_Feed_Manually)
        self.menuRSS.addAction(self.actionStart_Daily_Update_Manually)
        self.menuZen.addAction(self.actionCreate_Zen_Folder)
        self.menuZen.addAction(self.actionAdd_Zen_Segment)
        self.menuZen.addAction(self.actionSwitch_between_View_Edit)
        self.menuHelp.addAction(self.actionAbout)
        self.menuTab.addAction(self.actionCreate_New_Tab)
        self.menuTab.addAction(self.actionHide_Current_Tab)
        self.menuTab.addAction(self.actionDelete_Current_Tab)
        self.menuOther.addAction(self.actionSetting)
        self.menuOther.addAction(self.actionExit)

        self.retranslateUi(dongli_teahouse_studio_window)

        self.stackedWidget.setCurrentIndex(0)
        self.stackedWidget_zen.setCurrentIndex(0)
        self.toolBox_text.setCurrentIndex(0)
        self.toolBox_text.layout().setSpacing(0)
        self.toolBox_concept.setCurrentIndex(0)
        self.toolBox_concept.layout().setSpacing(0)


        QMetaObject.connectSlotsByName(dongli_teahouse_studio_window)
    # setupUi

    def retranslateUi(self, dongli_teahouse_studio_window):
        dongli_teahouse_studio_window.setWindowTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Dongli Teahouse Studio", None))
        self.actionCreate_Concept.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Create Concept", None))
#if QT_CONFIG(tooltip)
        self.actionCreate_Concept.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Create Concept", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionCreate_Concept.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_New_Line.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Add New Line", None))
#if QT_CONFIG(shortcut)
        self.actionAdd_New_Line.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+D", None))
#endif // QT_CONFIG(shortcut)
        self.actionLink_Concept_to_Line.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Link Concept to Line", None))
#if QT_CONFIG(tooltip)
        self.actionLink_Concept_to_Line.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Link Concept to Line", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionLink_Concept_to_Line.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave_Data.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Save Data", None))
#if QT_CONFIG(tooltip)
        self.actionSave_Data.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Save Data", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSave_Data.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionDelete.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Delete", None))
#if QT_CONFIG(tooltip)
        self.actionDelete.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"All sorts of deleting operating depending on which widget you are focusing on.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionDelete.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Del", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_Concept_To_Parent.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Add Concept To Parent", None))
#if QT_CONFIG(shortcut)
        self.actionAdd_Concept_To_Parent.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+1", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_Concept_To_Child.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Add Concept To Child", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_Concept_To_Child.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Add Concept To Child", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_Concept_To_Child.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+2", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_Concept_To_Relative.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Add Concept To Relative", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_Concept_To_Relative.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Add Concept To Relative", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_Concept_To_Relative.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+3", None))
#endif // QT_CONFIG(shortcut)
        self.actionToggle_Fullscreen.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Toggle Fullscreen", None))
#if QT_CONFIG(shortcut)
        self.actionToggle_Fullscreen.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"F11", None))
#endif // QT_CONFIG(shortcut)
        self.actionExit.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Exit", None))
#if QT_CONFIG(shortcut)
        self.actionExit.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+W", None))
#endif // QT_CONFIG(shortcut)
        self.actionAbout.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"About", None))
        self.actionSearch_Concept.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Search Concept", None))
#if QT_CONFIG(shortcut)
        self.actionSearch_Concept.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+R", None))
#endif // QT_CONFIG(shortcut)
        self.actionImport_File_Tree_to_Concept.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Import File Tree to Concept", None))
#if QT_CONFIG(tooltip)
        self.actionImport_File_Tree_to_Concept.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Import File Tree to Concept", None))
#endif // QT_CONFIG(tooltip)
        self.actionCreate_New_Tab.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Create New Tab", None))
        self.actionHide_Current_Tab.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Hide Current Tab", None))
        self.actionDelete_Current_Tab.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Delete Current Tab", None))
        self.actionCreate_RSS_Folder.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Create RSS Folder", None))
        self.actionAdd_RSS_Feed.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Add RSS Feed", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_RSS_Feed.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Add RSS Feed", None))
#endif // QT_CONFIG(tooltip)
        self.actionOpen_WebPage_In_Browser.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Open WebPage In Browser", None))
#if QT_CONFIG(shortcut)
        self.actionOpen_WebPage_In_Browser.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"F10", None))
#endif // QT_CONFIG(shortcut)
        self.actionExport_Concept_Data_to_Json.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Export Concept Data to Json", None))
        self.actionExport_Diary_Data_to_Json.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Export Diary Data to Json", None))
        self.actionExport_RSS_Data_to_Json.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Export RSS Data to Json", None))
        self.actionSetting.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Setting", None))
        self.actionFile_Check.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"File Check", None))
#if QT_CONFIG(tooltip)
        self.actionFile_Check.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"File Check", None))
#endif // QT_CONFIG(tooltip)
        self.actionExport_File_Data_to_Json.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Export File Data to Json", None))
#if QT_CONFIG(tooltip)
        self.actionExport_File_Data_to_Json.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Export File Data to Json", None))
#endif // QT_CONFIG(tooltip)
        self.actionEdit.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Edit", None))
#if QT_CONFIG(tooltip)
        self.actionEdit.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Edit", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionEdit.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"F2", None))
#endif // QT_CONFIG(shortcut)
        self.actionUpdate_Feed_Manually.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Update Feed Manually", None))
#if QT_CONFIG(tooltip)
        self.actionUpdate_Feed_Manually.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Update Feed Manually", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionUpdate_Feed_Manually.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"F4", None))
#endif // QT_CONFIG(shortcut)
        self.actionSearch_Diary_Text.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Search Diary Text", None))
#if QT_CONFIG(shortcut)
        self.actionSearch_Diary_Text.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+F", None))
#endif // QT_CONFIG(shortcut)
        self.actionSearch_File_Library.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Search File Library", None))
#if QT_CONFIG(shortcut)
        self.actionSearch_File_Library.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"Ctrl+Q", None))
#endif // QT_CONFIG(shortcut)
        self.actionLocate.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Locate", None))
#if QT_CONFIG(tooltip)
        self.actionLocate.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Locate", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionLocate.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"F3", None))
#endif // QT_CONFIG(shortcut)
        self.actionExport_RSS_Tree_Data_to_Json.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Export RSS Tree Data to Json", None))
        self.actionStay_on_Top.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Stay on Top", None))
        self.actionAnalyze_Diary_with_Concept.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Analyze Diary with Concept", None))
        self.actionStart_Daily_Update_Manually.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Start Daily Update Manually", None))
#if QT_CONFIG(tooltip)
        self.actionStart_Daily_Update_Manually.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Start Daily Update Manually", None))
#endif // QT_CONFIG(tooltip)
        self.actionCreate_Zen_Folder.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Create Zen Folder", None))
        self.actionAdd_Zen_Segment.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Add Zen Segment", None))
        self.actionSwitch_between_View_Edit.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Switch between View\\Edit", None))
#if QT_CONFIG(shortcut)
        self.actionSwitch_between_View_Edit.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"F9", None))
#endif // QT_CONFIG(shortcut)
        self.actionExport_Zen_Data_to_Json.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Export Zen Data to Json", None))
        self.actionExport_Zen_Tree_Data_to_Json.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Export Zen Tree Data to Json", None))
        self.actionHide_Main_Window.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Hide Main Window", None))
        self.actionRestore_Main_Window.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Restore Main Window", None))
        self.actionI_m_Feeling_Lucky.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"I'm Feeling Lucky", None))
        self.actionRestore_to_Normal_Size.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Restore to Normal Size", None))
        self.actionData_Security_Check.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Data Security Check", None))
        self.actionBackup_Data.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Backup Data", None))
        self.actionBoss_Coming.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Boss Coming", None))
#if QT_CONFIG(shortcut)
        self.actionBoss_Coming.setShortcut(QCoreApplication.translate("dongli_teahouse_studio_window", u"F1", None))
#endif // QT_CONFIG(shortcut)
        self.btn_menu.setText("")
        self.label_title_bar_top.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Dongli Teahouse Studio", None))
        self.btn_minimize.setText("")
        self.btn_maximize.setText("")
        self.btn_close.setText("")
        self.btn_stack_home.setText("")
        self.btn_stack_rss.setText("")
        self.btn_stack_diary.setText("")
        self.btn_stack_zen.setText("")
        self.btn_stack_tab.setText("")
        self.btn_stack_menu.setText("")
        self.label_home.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Home", None))
        self.label_hello.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Welcome", None))
        self.lineEdit_rss_search.setPlaceholderText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Search Feed / F: Folder / U: URL", None))
        ___qtreewidgetitem = self.treeWidget_rss.headerItem()
        ___qtreewidgetitem.setText(0, QCoreApplication.translate("dongli_teahouse_studio_window", u"1", None));
#if QT_CONFIG(statustip)
        self.treeWidget_rss.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.textEdit_viewer.setHtml(QCoreApplication.translate("dongli_teahouse_studio_window", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'SimSun'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:18pt;\"><br /></p></body></html>", None))
        self.lineEdit_zen_search.setPlaceholderText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Search Segment / F: Folder / T: Text", None))
        ___qtreewidgetitem1 = self.treeWidget_zen.headerItem()
        ___qtreewidgetitem1.setText(0, QCoreApplication.translate("dongli_teahouse_studio_window", u"1", None));
#if QT_CONFIG(statustip)
        self.treeWidget_zen.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.textEdit_viewer_zen.setHtml(QCoreApplication.translate("dongli_teahouse_studio_window", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'SimSun'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:18pt;\"><br /></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.pushButton_typora.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Do Not Open The Program Beforehand!", None))
#endif // QT_CONFIG(tooltip)
        self.pushButton_typora.setText("")
#if QT_CONFIG(tooltip)
        self.pushButton_sublime.setToolTip(QCoreApplication.translate("dongli_teahouse_studio_window", u"Do Not Open The Program Beforehand!", None))
#endif // QT_CONFIG(tooltip)
        self.pushButton_sublime.setText("")
        self.lineEdit_zen_text_search.setPlaceholderText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Regex Search", None))
        self.label_zen_text_search.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"0", None))
        ___qtreewidgetitem2 = self.treeWidget_segment.headerItem()
        ___qtreewidgetitem2.setText(0, QCoreApplication.translate("dongli_teahouse_studio_window", u"1", None));
        self.dockWidget_diary.setWindowTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Diary", None))
        self.label_diary_icon.setText("")
        self.label_titlebar_diary.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Diary", None))
        self.pushButton_diary_close.setText("")
        self.toolBox_text.setItemText(self.toolBox_text.indexOf(self.page_text_related_concept), QCoreApplication.translate("dongli_teahouse_studio_window", u"Text Related Concept", None))
        self.toolBox_text.setItemText(self.toolBox_text.indexOf(self.page_text_linked_file), QCoreApplication.translate("dongli_teahouse_studio_window", u"Text Linked File", None))
        self.label_sizegrip_diary.setText("")
        self.dockWidget_library.setWindowTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Library", None))
        self.label_library_icon.setText("")
        self.label_titlebar_library.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Library", None))
        self.pushButton_library_close.setText("")
        self.lineEdit_search_file.setPlaceholderText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Search File / \\d / \\c / \\^c", None))
        self.label_sizegrip_library.setText("")
        self.menuView.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"View", None))
        self.menuFile.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"File", None))
        self.menuExport.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Export to Json", None))
        self.menuTool.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Tool", None))
        self.menuDiary.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Diary", None))
        self.menuConcept.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Concept", None))
        self.menuLibrary.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Library", None))
        self.menuRSS.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"RSS", None))
        self.menuZen.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Zen", None))
        self.menuHelp.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Help", None))
        self.menuTab.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Tab", None))
        self.menuOther.setTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Other", None))
        self.dockWidget_sticker.setWindowTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Sticker", None))
        self.label_sticker_icon.setText("")
        self.label_titlebar_sticker.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Sticker", None))
        self.pushButton_sticker_close.setText("")
        self.label_sizegrip_sticker.setText("")
        self.dockWidget_concept.setWindowTitle(QCoreApplication.translate("dongli_teahouse_studio_window", u"Concept", None))
        self.label_concept_icon.setText("")
        self.label_titlebar_concept.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Concept", None))
        self.pushButton_concept_close.setText("")
        self.lineEdit_search_concept.setPlaceholderText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Search Concept / \\^c / \\^p", None))
        self.label_id.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"ID", None))
        self.label_name.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Name", None))
        self.label_detail.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Detail", None))
        self.plainTextEdit_detail.setPlainText("")
        self.label_parent.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Parent", None))
        self.label_child.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Child", None))
        self.label_relative.setText(QCoreApplication.translate("dongli_teahouse_studio_window", u"Relative", None))
        self.toolBox_concept.setItemText(self.toolBox_concept.indexOf(self.page_concept_related_text), QCoreApplication.translate("dongli_teahouse_studio_window", u"Concept Related Text", None))
        self.toolBox_concept.setItemText(self.toolBox_concept.indexOf(self.page_concept_linked_file), QCoreApplication.translate("dongli_teahouse_studio_window", u"Concept Linked File", None))
        self.label_sizegrip_concept.setText("")
    # retranslateUi

